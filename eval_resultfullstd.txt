easy pred: select count(*) from stadium
easy gold: SELECT count(*) FROM singer

easy pred: select count(*) from stadium
easy gold: SELECT count(*) FROM singer

medium pred: select Song_Name,Name,Age from singer order by Age desc
medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC

medium pred: select min(Age),avg(Age),max(Age) from singer where Is_male = 'terminal'
medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'

medium pred: select min(Age),avg(Age),max(Age) from singer
medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'

medium pred: select Song_release_year,Age from singer order by * asc limit 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

medium pred: select Song_release_year,Age from singer where Is_male = 'terminal'
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

easy pred: select Country from singer where Age < 'terminal'
easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20

medium pred: select Country,count(*) from singer group by Song_Name
medium gold: SELECT country ,  count(*) FROM singer GROUP BY country

hard pred: select Song_Name from singer order by Age desc
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

hard pred: select Song_Name from singer where Age > (select avg(Age) from singer where Name = 'terminal')
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

medium pred: select T4.Name,T1.Location from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID where T1.Capacity between 'terminal' and 'terminal'
medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000

medium pred: select Capacity,Name from stadium group by Stadium_ID order by count(*) desc limit 1
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1

medium pred: select T4.Name,T1.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID group by T1.Stadium_ID order by count(*) desc limit 1
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1

medium pred: select count(*) from concert where Year = 'terminal'
medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

medium pred: select count(*) from concert where Year = 'terminal'
medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

medium pred: select concert_Name,Theme from concert group by Theme
medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

medium pred: select Location,count(*) from stadium group by Location
medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

extra pred: select T2.concert_Name,T1.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where T1.Capacity <= 'terminal' group by T1.Location order by count(*) desc limit 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

extra pred: select Capacity,Name from stadium group by Stadium_ID order by count(*) desc limit 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

hard pred: select T3.Year from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID group by T1.Song_release_year order by count(*) desc limit 1
hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

hard pred: select T3.Year from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID group by T1.Song_release_year order by count(*) desc limit 1
hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

hard pred: select T1.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where T2.Stadium_ID not in (select Stadium_ID from concert)
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)

medium pred: select T1.Song_Name,T3.concert_Name,T3.Theme from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID group by T3.Theme
medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

medium pred: select T1.Name,T4.Name,T4.Song_Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID group by T3.Singer_ID
medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

medium pred: select T3.concert_Name,T1.Song_Name from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID group by T2.Singer_ID
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

medium pred: select T1.Name,T1.Song_Name from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID group by T2.Singer_ID
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

medium pred: select T1.Song_Name from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID where T3.Year = 'terminal'
medium gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014

medium pred: select T1.Song_Name from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID where T3.Year = 'terminal'
medium gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014

medium pred: select Song_Name,Name from singer where Song_Name like 'terminal'
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

medium pred: select T1.Name,T1.Country from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID where T3.concert_Name like 'terminal'
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

extra pred: select Name,Location from stadium where Average = 'terminal' intersect select Name,Location from stadium where Average = 'terminal'
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015

extra pred: select Name,Location from stadium where Capacity = 'terminal' intersect select T1.Name,T1.Location from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID where T4.Song_release_year = 'terminal'
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015

hard pred: select count(*) from stadium order by Lowest desc limit 1
hard gold: SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1

hard pred: select count(*) from stadium where Capacity = (select max(Capacity) from stadium)
hard gold: SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1

medium pred: select weight from Pets order by weight asc limit 1
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

medium pred: select T3.weight from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Sex = 'terminal'
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

medium pred: select count(*) from Student where Age > 'terminal'
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

medium pred: select count(*) from Student where Age > 'terminal'
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

medium pred: select count(*) from Student where Fname = 'terminal' and Sex = 'terminal'
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

medium pred: select count(*) from Student where LName = 'terminal' and Fname = 'terminal'
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

hard pred: select Fname from Student where StuID in (select PetID from Pets where PetType = 'terminal')
hard gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

hard pred: select T1.Fname from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.weight = 'terminal'
hard gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

extra pred: select Fname from Student where city_code = 'terminal' intersect select Fname from Student where city_code = 'terminal'
extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: select Fname from Student where LName = 'terminal' intersect select Fname from Student where Fname = 'terminal'
extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: select Major,Age from Student where Sex = 'terminal'
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

extra pred: select Age,Fname from Student where StuID not in (select T1.StuID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.PetType = 'terminal')
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

hard pred: select StuID from Student except select T1.StuID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.PetType = 'terminal'
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

hard pred: select StuID from Student where Sex = 'terminal' except select T1.StuID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.PetType = 'terminal'
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

extra pred: select Age,Fname from Student except select Age,Fname from Student where LName = 'terminal'
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

extra pred: select Fname from Student where city_code = 'terminal' except select Fname from Student
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

medium pred: select weight,PetType from Pets order by weight asc limit 1
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

medium pred: select PetType,weight from Pets where PetType = 'terminal'
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

medium pred: select T3.weight,T3.pet_age from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Sex = 'terminal'
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

medium pred: select T3.weight,T3.pet_age from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Sex = 'terminal'
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

medium pred: select max(weight),avg(weight),PetType from Pets group by PetType
medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype

medium pred: select max(pet_age),avg(pet_age),max(weight),avg(weight) from Pets group by PetType
medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype

medium pred: select Age,Fname from Student
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select T3.pet_age,T1.Age from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select T3.PetID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Fname = 'terminal'
medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

medium pred: select T3.PetID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Fname = 'terminal'
medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

medium pred: select PetID,count(*) from Pets group by PetID
medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid

medium pred: select T1.StuID,T3.PetID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.city_code = 'terminal' group by T2.StuID
medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid

medium pred: select Fname,Sex from Student group by Sex having count(*) > 'terminal'
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1

medium pred: select Fname,Sex from Student group by Sex having count(*) > 'terminal'
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1

medium pred: select T1.LName from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.pet_age = 'terminal'
medium gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

medium pred: select LName from Student where Age = 'terminal'
medium gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

extra pred: select avg(Age) from Student where StuID not in (select StuID from Has_Pet)
extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

extra pred: select avg(Age) from Student where city_code not in (select StuID from Has_Pet)
extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

medium pred: select T1.CountryName,T2.Country,count(*) from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by T1.CountryName
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

medium pred: select T2.Id,T1.CountryName,T2.FullName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by T2.Id
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

easy pred: select count(*) from continents
easy gold: SELECT count(*) FROM COUNTRIES;

easy pred: select count(*) from continents
easy gold: SELECT count(*) FROM COUNTRIES;

medium pred: select T4.Horsepower,count(*),T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T1.Id
medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

medium pred: select T1.Maker,T3.Make,T1.Id,T1.FullName from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model group by T1.Id
medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

hard pred: select Accelerate from cars_data order by Accelerate asc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

hard pred: select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Horsepower asc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

extra pred: select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight < (select Country from car_makers)
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

extra pred: select T1.Model from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id where T2.Weight < (select avg(Horsepower) from cars_data)
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

medium pred: select T1.FullName from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = 'terminal'
medium gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

medium pred: select FullName from car_makers where Country = 'terminal'
medium gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

extra pred: select T1.Maker,T4.Year from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.FullName = 'terminal'
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

eval_err_num:1
extra pred: select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = (select max(T1.Continent) from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id order by T5.Year asc limit 1)
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

medium pred: select T1.Country from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year > 'terminal'
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

medium pred: select Model from car_names where Model = 'terminal'
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

medium pred: select CountryName,count(*) from countries group by CountryName
medium gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

medium pred: select T2.Country,count(*) from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by T1.CountryName
medium gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

extra pred: select Country from car_makers group by Country order by count(*) desc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

extra pred: select T1.CountryName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country order by T2.Country desc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

medium pred: select T2.FullName,count(*) from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by T1.CountryName
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

medium pred: select Maker,FullName,count(*) from car_makers group by FullName
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

medium pred: select T5.Year from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where T1.CountryName = 'terminal'
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

medium pred: select T4.Accelerate from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.FullName = 'terminal'
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

medium pred: select count(*) from continents
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

medium pred: select count(*) from countries where CountryName = 'terminal'
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

medium pred: select count(*) from continents
medium gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

medium pred: select count(*) from car_makers where FullName = 'terminal'
medium gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

easy pred: select T1.CountryName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id group by T1.CountryName having avg(T5.Horsepower) = 'terminal'
easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;

easy pred: select avg(T4.Weight) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.Country = 'terminal'
easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;

hard pred: select T2.Maker from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country order by T1.Continent asc limit 1
hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;

hard pred: select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = 'terminal' order by T4.Year asc limit 1
hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;

medium pred: select Maker,Country from car_makers
medium gold: SELECT Maker ,  Model FROM MODEL_LIST;

medium pred: select T4.Accelerate,T1.Country from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id
medium gold: SELECT Maker ,  Model FROM MODEL_LIST;

medium pred: select CountryName,CountryId from countries group by CountryId having count(*) >= 'terminal'
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

medium pred: select CountryId,CountryName from countries group by CountryName having count(*) >= 'terminal'
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

easy pred: select count(*) from cars_data where Weight > 'terminal'
easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;

medium pred: select T3.Make,T1.Country from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model group by T1.Country
medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;

medium pred: select T1.Continent,T5.Year from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id group by T1.Continent
medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;

hard pred: select Country from car_makers group by Country having count(*) >= 'terminal'
hard gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

hard pred: select CountryName from countries group by CountryName having count(*) >= 'terminal'
hard gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

extra pred: select max(Horsepower) from cars_data order by Year asc limit 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

extra pred: select T4.Weight,T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Horsepower desc limit 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

hard pred: select FullName from car_makers group by Id order by count(*) desc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

hard pred: select T1.FullName from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Year desc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

easy pred: select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year < 'terminal'
easy gold: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;

easy pred: select avg(T4.Year) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.FullName = 'terminal'
easy gold: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;

medium pred: select avg(Year) from cars_data order by Year asc limit 1
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

medium pred: select avg(Weight) from cars_data
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

medium pred: select max(Year),max(Cylinders) from cars_data group by Cylinders
medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;

medium pred: select max(Cylinders),max(Accelerate) from cars_data group by Cylinders
medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;

hard pred: select Model from car_names
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

hard pred: select T3.Model from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker group by T1.CountryName order by count(*) desc limit 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

easy pred: select count(*) from cars_data group by MPG having count(*) > 'terminal'
easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;

easy pred: select count(*) from cars_data group by MPG having count(*) > 'terminal'
easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;

easy pred: select sum(Horsepower),Year from cars_data
easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;

medium pred: select count(*) from countries where CountryName = 'terminal'
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

medium pred: select count(*) from car_makers where FullName = 'terminal'
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

medium pred: select T2.ModelId,T1.FullName,T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker group by T1.Id having count(*) > 'terminal'
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

medium pred: select T3.ModelId,T1.CountryName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker group by T1.CountryName having count(*) > 'terminal'
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

hard pred: select T2.Maker from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country where T1.CountryName = 'terminal'
hard gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

hard pred: select T2.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model where T1.Model = 'terminal'
hard gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

medium pred: select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.MPG < 'terminal' intersect select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Cylinders > 'terminal'
medium gold: SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;

medium pred: select Weight from cars_data where Weight > 'terminal'
medium gold: SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;

medium pred: select Horsepower from cars_data order by Year desc limit 1
medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;

medium pred: select Horsepower from cars_data order by Year desc limit 1
medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;

extra pred: select T1.Make,T2.Horsepower from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id order by T2.Year asc limit 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

extra pred: select T4.Model,T3.Model from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model where T1.CountryName = 'terminal'
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

hard pred: select count(T1.Maker) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight > (select max(Country) from car_makers where Country = 'terminal')
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

hard pred: select count(*) from cars_data where Weight > (select max(MPG) from cars_data) group by MPG order by count(*) desc limit 1
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

easy pred: select count(*) from countries group by CountryId having count(*) > 'terminal'
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );

easy pred: select count(*) from countries group by CountryId having count(*) > 'terminal'
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );

easy pred: select count(*) from cars_data where Year > 'terminal'
easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;

easy pred: select count(*) from car_makers where FullName = 'terminal'
easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;

extra pred: select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Year desc limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

extra pred: select Horsepower from cars_data order by Year desc limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

extra pred: select T1.CountryName,T2.FullName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by T1.CountryName having count(*) > 'terminal' except select T1.CountryName,T2.FullName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country where T2.Country = 'terminal'
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;

extra pred: select T1.FullName,T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight < 'terminal'
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;

extra pred: select max(Year) from cars_data where MPG < 'terminal' order by Year asc limit 1
extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;

extra pred: select max(Horsepower) from cars_data where Year < 'terminal'
extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;

medium pred: select Country from car_makers where FullName != 'terminal'
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

medium pred: select T4.Model from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model where T1.Continent = (select T4.Model from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model where T1.CountryName = 'terminal')
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

hard pred: select CountryName from countries except select T1.CountryName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country where T2.Country = 'terminal'
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

hard pred: select CountryName from countries except select T1.CountryName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country where T2.Country = 'terminal'
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

extra pred: select Id,FullName from car_makers group by Id having count(*) > 'terminal' intersect select Id,FullName from car_makers group by Id having count(*) > 'terminal'
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

extra pred: select Country,Id from car_makers group by Id having count(*) >= 'terminal'
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:2
extra pred: select T2.CountryId,T2.CountryName from continents as T1 join countries as T2 on T1.ContId = T2.Continent group by T1.ContId having count(*) > 'terminal' union select T1.CountryId,T1.CountryName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id group by T1.CountryName having count(T5.Id) > 'terminal'
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';

eval_err_num:3
extra pred: select T2.CountryId,T2.CountryName from continents as T1 join countries as T2 on T1.ContId = T2.Continent group by T1.ContId having count(*) > 'terminal' union select T1.CountryId,T1.CountryName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id group by T1.CountryName having count(T5.Id) > 'terminal'
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';

easy pred: select Country from airports where AirportName = 'terminal' and Country = 'terminal'
easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select Abbreviation from airlines where Abbreviation = 'terminal'
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select T2.SourceAirport from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 'terminal'
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

medium pred: select T2.AirportName,T1.Airline from airlines as T1 join airports as T2 where T2.AirportName = 'terminal'
medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"

medium pred: select T2.FlightNo,T1.Airline from airlines as T1 join flights as T2 where T2.FlightNo = 'terminal'
medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"

medium pred: select AirportName,City from airports where CountryAbbrev = 'terminal'
medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"

medium pred: select City,AirportName from airports where CountryAbbrev = 'terminal'
medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"

easy pred: select count(*) from airlines
easy gold: SELECT count(*) FROM AIRPORTS

easy pred: select count(*) from airlines
easy gold: SELECT count(*) FROM AIRPORTS

easy pred: select count(*) from airlines
easy gold: SELECT count(*) FROM FLIGHTS

easy pred: select count(*) from airlines
easy gold: SELECT count(*) FROM FLIGHTS

easy pred: select Airline from airlines where Country = 'terminal'
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

easy pred: select Airline from airlines where Airline = 'terminal'
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

medium pred: select Country,City from airports where Country = 'terminal'
medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"

medium pred: select Country,City from airports where Country = 'terminal'
medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"

easy pred: select AirportName from airports where Country = 'terminal'
easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"

easy pred: select AirportName from airports where Country = 'terminal'
easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"

easy pred: select AirportName from airports where Country = 'terminal'
easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"

medium pred: select count(*) from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 'terminal' and T2.DestAirport = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count(*) from flights where DestAirport = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count(*) from flights where DestAirport = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count(*) from flights where DestAirport = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count(*) from flights where FlightNo = 'terminal' and DestAirport = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

medium pred: select count(*) from flights where FlightNo = 'terminal' and DestAirport = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

medium pred: select count(*) from flights where FlightNo = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

medium pred: select count(*) from flights where DestAirport = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

medium pred: select count(*) from flights where SourceAirport = 'terminal' and DestAirport = 'terminal'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

medium pred: select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 'terminal' and T2.DestAirport = 'terminal'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

medium pred: select count(*) from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 'terminal' and T2.DestAirport = 'terminal'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

medium pred: select count(*) from flights where FlightNo = 'terminal' and DestAirport = 'terminal'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

medium pred: select count(*) from flights where FlightNo = 'terminal' and DestAirport = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

medium pred: select FlightNo from flights where DestAirport = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

extra pred: select City from airports group by City order by count(*) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

extra pred: select City from airports group by City order by count(*) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

extra pred: select City from airports group by City order by count(*) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

extra pred: select City from airports group by City order by count(*) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

extra pred: select AirportCode from airports group by AirportCode order by count(*) desc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

extra pred: select AirportName from airports group by AirportCode order by count(*) desc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

extra pred: select AirportCode from airports group by AirportCode order by count(*) asc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

extra pred: select AirportCode from airports order by Country asc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

extra pred: select FlightNo from flights group by Airline order by count(*) desc limit 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

extra pred: select Airline from flights group by Airline order by count(*) desc limit 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.Country,T2.Country from airlines as T1 join airports as T2 group by T2.Country order by count(*) asc limit 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

extra pred: select Country,count(*) from airports group by Country order by count(*) asc limit 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

medium pred: select T1.Country from airlines as T1 join flights as T2 where T2.FlightNo = 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

medium pred: select Country from airlines where Airline = 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

medium pred: select * from flights where DestAirport = 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

medium pred: select T1.Airline from airlines as T1 join flights as T2 where T2.FlightNo = 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

extra pred: select T1.Country from airlines as T1 join flights as T2 where T2.Airline = 'terminal' intersect select T1.Country from airlines as T1 join flights as T2 where T2.FlightNo = 'terminal'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

extra pred: select T1.Country from airlines as T1 join flights as T2 where T2.Airline = 'terminal' intersect select Country from airlines where Airline = 'terminal'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

extra pred: select T1.Country from airlines as T1 join flights as T2 where T2.FlightNo != 'terminal' except select T1.Country from airlines as T1 join flights as T2 where T2.FlightNo != 'terminal'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

extra pred: select * from flights where DestAirport like 'terminal' except select Country from airports where Country = 'terminal'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

medium pred: select * from flights group by Airline having count(*) >= 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

medium pred: select count(*) from flights group by Airline having count(*) >= 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

medium pred: select * from airlines where Country = 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

medium pred: select count(*) from airlines where Country = 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

medium pred: select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 'terminal'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

easy pred: select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 'terminal'
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select FlightNo from flights where Airline = 'terminal'
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

medium pred: select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 'terminal'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select FlightNo from flights where DestAirport = 'terminal'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select FlightNo from flights where DestAirport = 'terminal'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select FlightNo from flights where DestAirport = 'terminal'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

hard pred: select count(*) from flights where DestAirport like 'terminal' and DestAirport = 'terminal'
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

hard pred: select count(*) from flights where DestAirport like 'terminal' and DestAirport = 'terminal'
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

hard pred: select AirportName from airports except select AirportName from airports where Country = 'terminal'
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

hard pred: select T2.DestAirport from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName like 'terminal' and T1.AirportName = 'terminal'
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

easy pred: select Name from employee order by Age desc
easy gold: SELECT name FROM employee ORDER BY age

medium pred: select City from employee where Age > 'terminal'
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1

medium pred: select City from employee where Age > 'terminal'
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1

medium pred: select T1.Name,T1.Manager_name from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID join employee as T3 on T2.Employee_ID = T3.Employee_ID join evaluation as T4 on T3.Employee_ID = T4.Employee_ID order by T4.Year_awarded desc limit 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

medium pred: select T1.Name,T1.Manager_name from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID group by T2.Shop_ID order by count(*) desc limit 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

medium pred: select District,Name,Location from shop order by Manager_name desc
medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC

medium pred: select Manager_name,Location,Name from shop order by Manager_name asc
medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC

hard pred: select Name from shop where Number_products = (select avg(Number_products) from shop)
hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)

extra pred: select T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID group by T2.Employee_ID order by count(*) desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID group by T2.Employee_ID order by count(*) desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

hard pred: select T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID group by T2.Employee_ID order by count(*) desc limit 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

hard pred: select Name from employee except select T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID where T3.Name = 'terminal'
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

hard pred: select Name from employee except select T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID where T3.Name = 'terminal'
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

hard pred: select Name from shop where District != 'terminal'
hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

medium pred: select Location,count(*) from shop group by Location
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

medium pred: select T1.Name,count(*) from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID group by T2.Shop_ID
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

easy pred: select * from employee
easy gold: SELECT * FROM hiring

easy pred: select * from employee
easy gold: SELECT * FROM hiring

hard pred: select T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID where T3.Name = 'terminal' intersect select T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID where T3.Name = 'terminal'
hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000

hard pred: select T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID where T3.Name = 'terminal' intersect select T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID where T3.Name = 'terminal'
hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(*) FROM Documents

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(*) FROM Documents

medium pred: select T2.Paragraph_Text,T1.Document_Name,T1.Document_Description from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID
medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents

medium pred: select T2.Document_Name,T1.Version_Number,T2.Document_Description from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID
medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents

medium pred: select T1.Template_ID,T2.Document_Name from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T2.Document_Description like 'terminal'
medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"

medium pred: select Document_ID,Document_Name from Documents where Document_Description like 'terminal'
medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"

medium pred: select T2.Document_ID,T2.Template_ID,T1.Template_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T2.Document_Name = 'terminal'
medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"

medium pred: select T2.Document_ID,T2.Template_ID,T1.Template_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T2.Document_Name = 'terminal'
medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(DISTINCT template_id) FROM Documents

easy pred: select count(Document_Name) from Documents
easy gold: SELECT count(DISTINCT template_id) FROM Documents

medium pred: select count(*) from Templates where Template_Type_Code = 'terminal'
medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'

medium pred: select count(*) from Documents where Document_ID = 'terminal'
medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'

medium pred: select Document_ID,count(*) from Documents group by Template_ID
medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id

medium pred: select Template_Type_Code,count(*) from Templates group by Template_Type_Code
medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id

extra pred: select Template_ID,Template_Type_Code from Templates group by Template_Type_Code order by count(*) desc limit 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

extra pred: select Template_ID,Template_Type_Code from Templates group by Template_Type_Code order by count(*) desc limit 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

easy pred: select T2.Document_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T1.Template_Type_Code having count(*) > 'terminal'
easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1

hard pred: select Document_ID from Documents except select Document_ID from Documents
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

hard pred: select Document_ID from Documents except select Document_ID from Documents
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(*) FROM Templates

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(*) FROM Templates

medium pred: select T2.Version_Number,T1.Template_Type_Code,T2.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates

medium pred: select T4.Paragraph_Text,T2.Version_Number,T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID join Paragraphs as T4 on T3.Document_ID = T4.Document_ID group by T2.Template_Type_Code
medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT DISTINCT template_type_code FROM Templates

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT DISTINCT template_type_code FROM Templates

medium pred: select T2.Document_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T1.Template_Type_Code >= 'terminal' and T1.Template_Type_Code = 'terminal'
medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"

medium pred: select T2.Document_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T1.Template_Type_Code >= 'terminal' and T1.Template_Type_Code = 'terminal'
medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"

easy pred: select count(Template_Type_Code) from Templates where Template_ID = 'terminal'
easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"

medium pred: select T1.Template_Type_Code,T2.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID where T3.Document_Name = 'terminal'
medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5

medium pred: select T1.Template_Type_Code,T2.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID where T3.Document_Name = 'terminal'
medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5

medium pred: select T1.Template_Type_Code,T2.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T2.Template_Type_Code
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

medium pred: select T4.Paragraph_Text,T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID join Paragraphs as T4 on T3.Document_ID = T4.Document_ID group by T2.Template_Type_Code
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

medium pred: select count(*),Template_Type_Code from Templates group by Template_Type_Code
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

medium pred: select T1.Template_Type_Code,T2.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T2.Template_Type_Code
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

extra pred: select Template_Type_Code from Templates group by Template_Type_Code order by count(*) desc limit 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

extra pred: select Template_Type_Code from Templates group by Template_Type_Code order by count(*) desc limit 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

hard pred: select Template_Type_Code from Templates except select Template_Type_Code from Templates
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

hard pred: select Template_Type_Code from Templates except select Template_Type_Code from Templates
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

medium pred: select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

easy pred: select T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Template_Type_Code = 'terminal'
easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"

easy pred: select T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Template_Type_Code = 'terminal'
easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"

easy pred: select T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Template_Type_Code = 'terminal'
easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"

easy pred: select T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Template_Type_Code = 'terminal'
easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"

easy pred: select T1.Template_Type_Code from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T2.Document_Name = 'terminal'
easy gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

medium pred: select T1.Template_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T2.Template_ID = 'terminal'
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

medium pred: select Document_ID from Documents where Document_Description = 'terminal'
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(*) FROM Paragraphs

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(*) FROM Paragraphs

medium pred: select count(T2.Paragraph_Text) from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_Name = 'terminal'
medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

medium pred: select count(T2.Paragraph_Text) from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_Name = 'terminal'
medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

easy pred: select Other_Details from Documents where Document_Description = 'terminal'
easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'

easy pred: select Document_Description from Documents where Document_Description like 'terminal'
easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'

medium pred: select Template_ID,Document_ID from Documents where Document_Name = 'terminal'
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

medium pred: select T2.Document_ID,T1.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T2.Paragraph_Text = 'terminal'
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

medium pred: select Document_Description from Documents where Document_Name = 'terminal'
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"

medium pred: select Document_ID,count(*) from Documents group by Document_ID
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

medium pred: select T2.Paragraph_Text,count(*) from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by T1.Document_ID
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

medium pred: select T2.Paragraph_Text,T1.Document_Name,count(*) from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by T1.Document_ID
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

medium pred: select Document_ID,Document_Name,count(*) from Documents group by Document_ID
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

easy pred: select Document_ID from Documents group by Document_ID having count(*) >= 'terminal'
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2

easy pred: select Document_ID from Documents group by Document_ID having count(*) >= 'terminal'
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2

extra pred: select T2.Document_ID,T1.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by T1.Document_ID order by count(*) desc limit 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

extra pred: select Document_Name,Document_ID from Documents group by Document_ID order by count(*) desc limit 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

hard pred: select Document_ID from Documents group by Document_ID order by count(*) asc limit 1 having count(*) >= 'terminal'
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1

hard pred: select Document_ID from Documents group by Document_ID order by count(*) asc limit 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:4
easy pred: select Document_ID from Documents group by Document_ID having count(*) between 'terminal'
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

eval_err_num:5
easy pred: select Document_ID from Documents group by Document_ID having count(*) between 'terminal'
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

hard pred: select Document_ID from Documents where Document_Name like 'terminal'
hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'

hard pred: select Document_ID from Documents where Document_Name like 'terminal'
hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'

easy pred: select count(*) from course
easy gold: SELECT count(*) FROM teacher

easy pred: select count(*) from course
easy gold: SELECT count(*) FROM teacher

medium pred: select Name from teacher where Age like 'terminal' and Age = 'terminal'
medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33

medium pred: select Name from teacher where Age like 'terminal' and Age = 'terminal'
medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33

medium pred: select Age from teacher where Age = 'terminal' and Name = 'terminal'
medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1

medium pred: select Age from teacher where Age = 'terminal' and Name = 'terminal'
medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1

medium pred: select *,Name from teacher
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

medium pred: select Age,Name from teacher
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

medium pred: select Age,Name from teacher order by Name asc
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name

medium pred: select Age,Name from teacher order by Name asc
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name

medium pred: select T1.Name from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID where T2.Grade = 'terminal'
medium gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

medium pred: select T1.Name from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID where T2.Grade = 'terminal'
medium gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

medium pred: select T1.Name,count(*) from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID group by T2.Teacher_ID
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

medium pred: select T1.Name,count(*) from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID group by T2.Teacher_ID
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

medium pred: select Name from teacher group by Teacher_ID having count(*) >= 'terminal'
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

medium pred: select Name from teacher group by Teacher_ID having count(*) >= 'terminal'
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

hard pred: select Name from teacher where Teacher_ID not in (select Teacher_ID from teacher)
hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)

hard pred: select Name from teacher
hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)

medium pred: select Name from visitor where Level_of_membership > 'terminal' order by Age desc
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

easy pred: select avg(Age) from visitor where Level_of_membership > 'terminal'
easy gold: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4

medium pred: select Age,Name from visitor where Age > 'terminal' order by Age asc
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

medium pred: select T1.Museum_ID,T1.Name from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID group by T2.Museum_ID order by count(*) desc limit 1
medium gold: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1

easy pred: select avg(T1.Num_of_Staff) from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID where T2.Total_spent < 'terminal'
easy gold: SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009

medium pred: select Num_of_Staff,Open_Year from museum where Open_Year = 'terminal'
medium gold: SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'

hard pred: select Name from museum where Num_of_Staff > (select min(Total_spent) from visit where Total_spent > 'terminal') group by Museum_ID having count(*) >= 'terminal'
hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)

medium pred: select T3.ID,T1.Name,T1.Museum_ID from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID group by T2.Museum_ID having count(*) > 'terminal'
medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

extra pred: select T1.Name,sum(T3.Level_of_membership),T3.Name from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID group by T3.ID order by count(*) desc limit 1
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

extra pred: select T2.Museum_ID,T1.Museum_ID from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID group by T2.Museum_ID order by count(*) desc limit 1
extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1

hard pred: select Name from museum except select Name from museum where Num_of_Staff = 'terminal'
hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

hard pred: select Name,Age from visitor group by Name order by ID asc limit 1 having count(*) = 'terminal'
hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

medium pred: select max(Total_spent),avg(Total_spent) from visit
medium gold: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit

medium pred: select sum(Level_of_membership) from visitor where Level_of_membership = 'terminal'
medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

extra pred: select Name from museum where Open_Year > 'terminal' intersect select Name from museum where Open_Year < 'terminal'
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011

extra pred: select count(*) from museum where Open_Year > 'terminal'
extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)

medium pred: select count(*) from museum where Open_Year < 'terminal' and Open_Year > 'terminal'
medium gold: SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008

easy pred: select count(*) from players
easy gold: SELECT count(*) FROM matches

easy pred: select count(*) from players
easy gold: SELECT count(*) FROM matches

medium pred: select T1.first_name,T1.birth_date from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.year = 'terminal'
medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'

medium pred: select first_name,birth_date from players
medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'

easy pred: select avg(ranking) from rankings
easy gold: SELECT avg(winner_rank) FROM matches

easy pred: select avg(ranking) from rankings
easy gold: SELECT avg(winner_rank) FROM matches

easy pred: select sum(loser_rank) from matches
easy gold: SELECT min(loser_rank) FROM matches

easy pred: select count(loser_ioc) from matches
easy gold: SELECT count(DISTINCT country_code) FROM players

easy pred: select count(first_name) from players
easy gold: SELECT count(DISTINCT loser_name) FROM matches

easy pred: select tourney_name from matches group by tourney_id having count(*) > 'terminal'
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10

hard pred: select T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.year = 'terminal' intersect select T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.year = 'terminal'
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

hard pred: select T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.year = 'terminal' intersect select T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.year = 'terminal'
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

medium pred: select count(*) from matches where year >= 'terminal' and year = 'terminal'
medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016

medium pred: select count(*) from matches where year = 'terminal'
medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016

extra pred: select T1.last_name,T2.tourney_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.country_code = 'terminal' intersect select T1.last_name,T2.tourney_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.country_code = 'terminal'
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

extra pred: select last_name,first_name from players where country_code = 'terminal' intersect select last_name,first_name from players where country_code = 'terminal'
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

medium pred: select last_name,first_name from players order by birth_date asc limit 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

medium pred: select last_name,first_name from players order by birth_date asc limit 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

medium pred: select T1.first_name,T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.tourney_date asc
medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date

medium pred: select T1.first_name,T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.winner_age = 'terminal' order by T1.last_name asc
medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date

medium pred: select last_name,first_name from players order by last_name asc
medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date

hard pred: select last_name,first_name from players group by player_id order by count(*) desc limit 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

hard pred: select last_name,first_name from players group by player_id order by count(*) desc limit 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

hard pred: select score,loser_name from matches group by tourney_name order by count(*) desc limit 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

hard pred: select T1.first_name,T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.loser_rank_points desc limit 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

hard pred: select T1.last_name from players as T1 join rankings as T2 on T1.player_id = T2.player_id where T2.ranking = 'terminal' intersect select last_name from players where hand = 'terminal'
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

hard pred: select T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.tourney_level = 'terminal' group by T2.tourney_name order by count(*) desc limit 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

medium pred: select T1.last_name,T2.loser_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.winner_age desc limit 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

medium pred: select loser_name from matches order by draw_size asc limit 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

medium pred: select first_name,last_name from players group by last_name
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select T1.last_name,T1.first_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.loser_rank_points = (select avg(winner_rank_points) from matches)
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select loser_name,tourney_name from matches group by tourney_name
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select first_name from players
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select count(loser_ioc),count(*) from matches group by loser_ioc
medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code

easy pred: select T1.country_code from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.draw_size > 'terminal'
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50

medium pred: select T1.tourney_date,T3.tours from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T1.tourney_name
medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date

medium pred: select T1.tourney_date,T3.tours from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T1.tourney_name
medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date

medium pred: select loser_ioc,count(*) from matches group by tourney_level
medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR

medium pred: select loser_ioc,count(*) from matches group by tourney_name
medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR

medium pred: select tourney_name,loser_name from matches order by winner_age asc limit 1
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

medium pred: select T2.winner_name,T1.first_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.winner_age asc limit 1
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

medium pred: select count(*) from matches where tourney_level = 'terminal'
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

medium pred: select count(*) from players where first_name = 'terminal'
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

hard pred: select T1.first_name,T1.last_name,T1.birth_date from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.winner_rank_points desc limit 1
hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1

hard pred: select T1.first_name,T1.last_name,T2.tourney_date from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.tourney_date desc limit 1
hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1

medium pred: select loser_ioc,count(*) from matches group by loser_ioc
medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand

medium pred: select loser_ioc,count(*) from matches group by loser_ioc
medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand

easy pred: select count(*) from ship where lost_in_battle <= 'terminal'
easy gold: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'

medium pred: select T1.name,T2.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle order by T2.name desc
medium gold: SELECT name ,  tonnage FROM ship ORDER BY name DESC

medium pred: select T1.name,T3.note,T1.date from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id
medium gold: SELECT name ,  date FROM battle

medium pred: select max(T2.injured),min(T2.injured),max(T1.tonnage),min(T1.tonnage) from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id group by T2.injured
medium gold: SELECT max(killed) ,  min(killed) FROM death

easy pred: select avg(killed),avg(injured) from death group by injured
easy gold: SELECT avg(injured) FROM death

medium pred: select T2.ship_type,T1.result from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.lost_in_battle = 'terminal'
medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

medium pred: select T1.name,T1.result from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id where T3.injured > 'terminal'
medium gold: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'

medium pred: select T1.id,T2.id from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T1.date <= 'terminal'
medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'

medium pred: select T1.id,T2.caused_by_ship_id from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id where T2.injured > 'terminal'
medium gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

medium pred: select T2.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T1.bulgarian_commander = 'terminal' intersect select name from battle where bulgarian_commander = 'terminal'
medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'

extra pred: select count(tonnage) from ship where id not in (select T3.caused_by_ship_id from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id where T1.bulgarian_commander = 'terminal')
extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

extra pred: select T1.date,T2.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.ship_type = 'terminal' intersect select T1.date,T2.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T1.bulgarian_commander = 'terminal'
extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'

extra pred: select T2.name,T1.latin_commander,T1.bulgarian_commander from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.lost_in_battle = 'terminal'
extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

medium pred: select result from battle where result like 'terminal'
medium gold: SELECT note FROM death WHERE note LIKE '%East%'

medium pred: select T2.other_details from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id where T1.course_name like 'terminal'
medium gold: SELECT line_1 ,  line_2 FROM addresses

medium pred: select T2.first_name,T1.line_2 from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id
medium gold: SELECT line_1 ,  line_2 FROM addresses

easy pred: select count(*) from Addresses
easy gold: SELECT count(*) FROM Courses

easy pred: select count(*) from Addresses
easy gold: SELECT count(*) FROM Courses

easy pred: select course_description from Courses
easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'

easy pred: select zip_postcode from Addresses where state_province_county = 'terminal'
easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'

easy pred: select zip_postcode from Addresses where address_id = 'terminal'
easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'

extra pred: select department_id,department_name from Departments group by department_id order by count(*) desc limit 1
extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

extra pred: select department_id,department_description from Departments group by department_id order by count(*) desc limit 1
extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

easy pred: select count(department_name) from Departments
easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs

easy pred: select count(department_name) from Departments
easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs

easy pred: select count(section_name) from Sections
easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs

easy pred: select count(*) from Addresses
easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs

medium pred: select department_id from Departments group by department_id order by count(*) desc limit 1
medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

medium pred: select count(*) from Departments group by department_id
medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

medium pred: select T1.course_description,T2.section_description from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id
medium gold: SELECT section_name ,  section_description FROM Sections

medium pred: select T2.section_description,T1.course_description from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id
medium gold: SELECT section_name ,  section_description FROM Sections

medium pred: select T2.section_name,T1.course_name from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id group by T1.course_id having count(*) >= 'terminal'
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

medium pred: select T2.section_name,T1.course_name from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id group by T1.course_id having count(*) < 'terminal'
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

easy pred: select T2.email_address from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T2.first_name = 'terminal' order by T1.address_id asc
easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC

easy pred: select section_name from Sections order by section_name asc
easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC

extra pred: select T1.student_enrolment_id,T1.course_id from Student_Enrolment_Courses as T1 join Student_Enrolment as T2 on T1.student_enrolment_id = T2.student_enrolment_id group by T2.semester_id order by count(*) desc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T5.first_name,T4.semester_name from Student_Enrolment_Courses as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T1.student_enrolment_id = T3.student_enrolment_id join Semesters as T4 on T3.semester_id = T4.semester_id join Students as T5 on T3.student_id = T5.student_id group by T2.course_name,T1.course_id order by count(*) desc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1

medium pred: select T5.department_description from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Degree_Programs as T4 on T3.degree_program_id = T4.degree_program_id join Departments as T5 on T4.department_id = T5.department_id where T1.course_name like 'terminal'
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

medium pred: select T5.department_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Degree_Programs as T4 on T3.degree_program_id = T4.degree_program_id join Departments as T5 on T4.department_id = T5.department_id where T1.course_name like 'terminal'
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

medium pred: select T1.semester_name,T3.student_id,T3.first_name from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id group by T3.student_id order by count(*) asc limit 1 having count(*) >= 'terminal'
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

medium pred: select T5.student_id,T5.first_name,T4.semester_id,T4.semester_name from Departments as T1 join Degree_Programs as T2 on T1.department_id = T2.department_id join Student_Enrolment as T3 on T2.degree_program_id = T3.degree_program_id join Semesters as T4 on T3.semester_id = T4.semester_id join Students as T5 on T3.student_id = T5.student_id group by T2.department_id,T1.department_name having count(T1.department_name) = 'terminal'
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

medium pred: select T2.ssn,T2.last_name,T2.first_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T1.state_province_county = 'terminal'
medium gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

medium pred: select T4.semester_name,T2.last_name,T2.first_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id join Semesters as T4 on T3.semester_id = T4.semester_id where T1.state_province_county = 'terminal'
medium gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

extra pred: select T2.course_description from Student_Enrolment_Courses as T1 join Courses as T2 on T1.course_id = T2.course_id group by T1.course_id order by count(*) desc limit 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

extra pred: select T2.degree_summary_name from Departments as T1 join Degree_Programs as T2 on T1.department_id = T2.department_id group by T1.department_name order by count(*) desc limit 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

extra pred: select course_id,student_enrolment_id from Student_Enrolment_Courses group by student_course_id order by count(*) desc limit 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.department_description,T2.degree_summary_description from Departments as T1 join Degree_Programs as T2 on T1.department_id = T2.department_id group by T1.department_id order by count(*) desc limit 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.ssn,T2.student_id,T1.student_id,T1.first_name from Students as T1 join Student_Enrolment as T2 on T1.student_id = T2.student_id group by T1.student_id order by count(*) desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T4.semester_id,T2.first_name,T2.last_name,T4.semester_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id join Semesters as T4 on T3.semester_id = T4.semester_id group by T1.state_province_county,T2.student_id order by count(*) desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

hard pred: select T4.semester_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Semesters as T4 on T3.semester_id = T4.semester_id where T1.course_name != 'terminal'
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

hard pred: select course_name from Courses where course_name = 'terminal'
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

easy pred: select course_name from Courses
easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id

easy pred: select course_name from Courses
easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id

extra pred: select course_name from Courses group by course_id order by count(*) desc limit 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

extra pred: select course_name from Courses group by course_name order by count(*) desc limit 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

extra pred: select last_name from Students except select T2.last_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T1.state_province_county = 'terminal'
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

extra pred: select last_name from Students except select last_name from Students where other_student_details = 'terminal'
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

medium pred: select transcript_id,transcript_date from Transcripts group by transcript_id having count(transcript_id) >= 'terminal'
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

medium pred: select T1.transcript_id,T1.transcript_date from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Degree_Programs as T5 on T4.degree_program_id = T5.degree_program_id join Departments as T6 on T5.department_id = T6.department_id group by T1.transcript_id having count(T6.department_name) >= 'terminal'
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

medium pred: select T2.last_name,T2.first_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T2.first_name = 'terminal' and T1.country = 'terminal'
medium gold: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'

medium pred: select first_name,date_first_registered,date_left from Students order by date_left asc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

medium pred: select date_first_registered,last_name,first_name from Students
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

medium pred: select date_first_registered,date_left,first_name from Students order by date_left asc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

medium pred: select T5.middle_name,T5.last_name,T5.first_name from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Students as T5 on T4.student_id = T5.student_id order by T1.transcript_date asc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

easy pred: select T2.email_address from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T1.state_province_county = 'terminal'
easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id

easy pred: select first_name from Students where other_student_details = 'terminal'
easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id

extra pred: select other_address_details,country from Addresses group by address_id order by count(address_id) desc limit 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

extra pred: select zip_postcode,city,address_id from Addresses group by address_id order by count(zip_postcode) desc limit 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

easy pred: select avg(date_first_registered) from Students
easy gold: SELECT avg(transcript_date) FROM Transcripts

medium pred: select T6.transcript_date,T2.date_first_registered from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id join Student_Enrolment_Courses as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Transcript_Contents as T5 on T4.student_course_id = T5.student_course_id join Transcripts as T6 on T5.transcript_id = T6.transcript_id where T1.country = 'terminal'
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

medium pred: select date_first_registered,date_left from Students
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

easy pred: select count(*) from Addresses
easy gold: SELECT count(*) FROM Transcripts

easy pred: select count(*) from Addresses
easy gold: SELECT count(*) FROM Transcripts

medium pred: select date_first_registered from Students
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

medium pred: select T3.semester_id,T2.date_first_registered from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id where T1.state_province_county = 'terminal'
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

hard pred: select T2.semester_id,T1.student_enrolment_id from Student_Enrolment_Courses as T1 join Student_Enrolment as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Students as T3 on T2.student_id = T3.student_id group by T3.student_id order by T3.date_first_registered asc  having count(*) = 'terminal'
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

hard pred: select course_description,count(*) from Courses group by course_id
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

extra pred: select transcript_date from Transcripts group by transcript_id order by count(*) asc limit 1
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

extra pred: select semester_id from Student_Enrolment intersect select T2.semester_id from Students as T1 join Student_Enrolment as T2 on T1.student_id = T2.student_id where T1.email_address = 'terminal'
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

eval_err_num:6
extra pred: select T3.semester_id from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id where T1.country = 'terminal' intersect select T3.semester_id from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id where T1.course_description = 'terminal'
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

easy pred: select count(email_address) from Students
easy gold: SELECT count(DISTINCT current_address_id) FROM Students

easy pred: select email_address from Students
easy gold: SELECT count(DISTINCT current_address_id) FROM Students

easy pred: select * from Students order by other_student_details asc
easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC

easy pred: select * from Transcripts order by other_details asc
easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC

easy pred: select T1.department_description from Departments as T1 join Degree_Programs as T2 on T1.department_id = T2.department_id where T2.degree_summary_name = 'terminal'
easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'

easy pred: select T2.section_description from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id where T1.course_name = 'terminal'
easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'

extra pred: select first_name from Students where last_name = 'terminal' and date_left = 'terminal'
extra gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'

extra pred: select T2.first_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T2.last_name = 'terminal' and T1.city = 'terminal'
extra gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'

easy pred: select Written_by from Cartoon where Directed_by = 'terminal' and Written_by = 'terminal'
easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";

easy pred: select T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Title = 'terminal' and T2.Directed_by = 'terminal'
easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";

easy pred: select count(*) from Cartoon where Directed_by = 'terminal'
easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";

medium pred: select Written_by,Title from Cartoon order by Directed_by asc
medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date

medium pred: select Directed_by,Written_by from Cartoon order by count(*) asc
medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date

medium pred: select Title from Cartoon where Written_by >= 'terminal' and Written_by = 'terminal' and Directed_by = 'terminal'
medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";

medium pred: select T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.Language >= 'terminal' and T1.Language = 'terminal' and T2.Directed_by = 'terminal'
medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";

hard pred: select T1.Country,count(*) from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T2.Weekly_Rank = 'terminal' group by T1.Country order by count(*) desc limit 1
hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;

medium pred: select count(T2.Episode),count(T1.series_name) from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T2.Rating = 'terminal'
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;

medium pred: select count(T3.Channel),count(T2.Episode) from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel join Cartoon as T3 on T1.id = T3.Channel where T1.Language = 'terminal'
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;

easy pred: select T1.Content from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Title = 'terminal'
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";

easy pred: select Content from TV_Channel where Hight_definition_TV = 'terminal'
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";

easy pred: select T3.id from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T1.Share = 'terminal'
easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";

easy pred: select T1.Episode from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Directed_by = 'terminal'
easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";

easy pred: select count(*) from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.series_name = 'terminal' and T2.Written_by = 'terminal'
easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";

easy pred: select count(*) from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.Country = 'terminal' and T2.Directed_by = 'terminal'
easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";

hard pred: select T2.Channel,count(*) from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel order by T1.Pixel_aspect_ratio_PAR asc limit 1
hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;

medium pred: select Episode,count(*) from TV_series group by Episode
medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE

medium pred: select T3.Channel,count(*) from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel group by T1.Episode
medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE

medium pred: select T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 'terminal' and T1.Language = 'terminal'
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";

medium pred: select T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 'terminal' and T1.Language = 'terminal'
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";

medium pred: select T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.Hight_definition_TV = 'terminal' and T1.Language = 'terminal'
medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

easy pred: select Rating from TV_series order by Rating asc
easy gold: SELECT Episode FROM TV_series ORDER BY rating

medium pred: select T1.Pixel_aspect_ratio_PAR,T2.Rating from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel order by T2.Viewers_m asc limit 1
medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;

medium pred: select Rating,Episode from TV_series group by Episode order by count(*) asc limit 1
medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;

medium pred: select max(18_49_Rating_Share),min(18_49_Rating_Share) from TV_series
medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;

medium pred: select max(18_49_Rating_Share),min(18_49_Rating_Share) from TV_series
medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;

easy pred: select T2.Original_air_date from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.series_name = 'terminal'
easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";

easy pred: select T1.Pixel_aspect_ratio_PAR from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Title = 'terminal'
easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";

easy pred: select T1.Episode from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Directed_by = 'terminal'
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";

easy pred: select T1.Pixel_aspect_ratio_PAR from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Title = 'terminal'
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";

medium pred: select Title from Cartoon where Directed_by = 'terminal'
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";

medium pred: select T1.Episode from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Directed_by = 'terminal'
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";

medium pred: select T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 'terminal' and T1.Language = 'terminal'
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

medium pred: select T1.Episode from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Written_by = 'terminal'
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

medium pred: select Written_by,count(*) from Cartoon group by Written_by
medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by

medium pred: select count(Written_by),count(*) from Cartoon group by Written_by
medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by

medium pred: select T1.Content,T2.Episode from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel order by T1.Hight_definition_TV desc limit 1
medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1

medium pred: select T1.Language,T2.Episode from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel order by T1.Language desc limit 1
medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1

medium pred: select T2.Episode,T1.series_name from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T2.Rating = 'terminal'
medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"

medium pred: select T2.Channel,T1.series_name from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.Hight_definition_TV = 'terminal'
medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"

medium pred: select T1.Country from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T2.Episode = 'terminal'
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

medium pred: select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Written_by = 'terminal' except select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Written_by = 'terminal'
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

hard pred: select T1.Country from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T2.Episode != 'terminal'
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

hard pred: select Country from TV_Channel except select Country from TV_Channel where Content = 'terminal'
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

extra pred: select T2.Directed_by,T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.Language = 'terminal'
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

extra pred: select T2.Directed_by,T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.Pixel_aspect_ratio_PAR = 'terminal' intersect select T2.Directed_by,T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.Pixel_aspect_ratio_PAR = 'terminal'
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

medium pred: select avg(T2.Episode),T1.Pixel_aspect_ratio_PAR from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.Hight_definition_TV != 'terminal'
medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'

medium pred: select sum(T2.18_49_Rating_Share),T1.Country,T1.Pixel_aspect_ratio_PAR from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T2.Episode != 'terminal'
medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'

easy pred: select T2.Channel from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel group by T2.Channel having sum(T1.Pixel_aspect_ratio_PAR) > 'terminal'
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

easy pred: select id from TV_Channel group by id having sum(Pixel_aspect_ratio_PAR) > 'terminal'
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

hard pred: select id from TV_Channel where Hight_definition_TV = 'terminal' except select id from TV_Channel where Hight_definition_TV = 'terminal'
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

hard pred: select id from Cartoon except select T2.id from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 'terminal'
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

hard pred: select T1.Channel from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Directed_by != 'terminal'
hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')

hard pred: select T1.Hight_definition_TV from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by != 'terminal'
hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')

easy pred: select Earnings from poker_player order by Money_Rank desc
easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC

medium pred: select Final_Table_Made,Best_Finish from poker_player order by Final_Table_Made desc limit 1
medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player

medium pred: select T1.Final_Table_Made,T1.Best_Finish from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID where T2.Name = 'terminal'
medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player

easy pred: select count(*) from poker_player where Earnings < 'terminal'
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

easy pred: select max(Earnings) from poker_player where Earnings < 'terminal'
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

easy pred: select Name from people
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

easy pred: select Name from people
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

medium pred: select Name from people where Height > 'terminal'
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000

medium pred: select Name from people where Height > 'terminal'
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000

medium pred: select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings asc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made

medium pred: select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings asc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made

hard pred: select Birth_Date from people order by Height asc limit 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

hard pred: select Birth_Date from people order by Height asc limit 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

hard pred: select Money_Rank from poker_player order by Money_Rank desc limit 1
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

hard pred: select T1.Earnings from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T2.Height desc limit 1
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

medium pred: select avg(T2.Height) from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID where T1.Best_Finish > 'terminal'
medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

medium pred: select Name from people order by Height desc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC

medium pred: select Name from people order by Height desc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC

hard pred: select Name from people except select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID where T1.Poker_Player_ID = 'terminal'
hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

medium pred: select T2.phone_number,T1.contestant_name from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number order by T1.contestant_number desc
medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC

medium pred: select T1.contestant_number,T2.contestant_number,T2.phone_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number
medium gold: SELECT vote_id ,  phone_number ,  state FROM votes

medium pred: select min(contestant_number),max(contestant_number) from VOTES
medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state

easy pred: select T1.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state where T2.state = 'terminal'
easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'

medium pred: select T2.state,T1.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state
medium gold: SELECT DISTINCT state ,  created FROM votes

medium pred: select T2.phone_number,T1.contestant_name from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number group by T1.contestant_name having count(*) >= 'terminal'
medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

extra pred: select count(*),T1.contestant_name from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number order by T2.contestant_number asc limit 1
extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

medium pred: select count(*) from VOTES where state != 'terminal' and state = 'terminal'
medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'

extra pred: select count(*) from VOTES where created != 'terminal'
extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

extra pred: select area_code from AREA_CODE_STATE order by state desc limit 1
extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1

medium pred: select T1.contestant_number,T2.contestant_number,T2.phone_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number where T2.state = 'terminal'
medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

extra pred: select T1.area_code from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state where T2.state = 'terminal' intersect select T1.area_code from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state where T2.state = 'terminal'
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

easy pred: select Name from country where GovernmentForm = 'terminal'
easy gold: SELECT Name FROM country WHERE IndepYear  >  1950

easy pred: select T2.Code2 from sqlite_sequence as T1 join country as T2 where T1.name = 'terminal'
easy gold: SELECT Name FROM country WHERE IndepYear  >  1950

easy pred: select count(Code2) from country where GovernmentForm = 'terminal'
easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"

easy pred: select count(Code2) from country where GovernmentForm = 'terminal'
easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"

easy pred: select sum(SurfaceArea) from country
easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"

easy pred: select sum(SurfaceArea) from country where Name = 'terminal'
easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"

easy pred: select T2.Continent from sqlite_sequence as T1 join country as T2 where T1.name = 'terminal'
easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"

easy pred: select Name from country where LocalName = 'terminal'
easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"

medium pred: select District from city where Name = 'terminal'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

medium pred: select T2.Region from sqlite_sequence as T1 join country as T2 where T1.name = 'terminal'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

extra pred: select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.IsOfficial = 'terminal' order by T1.Population desc limit 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

extra pred: select T1.LocalName from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.SurfaceArea = 'terminal' and T2.Language = 'terminal'
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

medium pred: select T2.Population from sqlite_sequence as T1 join country as T2 where T1.name = 'terminal'
medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"

medium pred: select Population from country
medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"

medium pred: select T1.Population,T2.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code
medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"

medium pred: select T1.Population,T2.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.Name = 'terminal'
medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"

easy pred: select avg(T2.Population) from sqlite_sequence as T1 join country as T2 where T1.name = 'terminal'
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

easy pred: select avg(T3.Percentage) from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode where T1.Population = (select avg(Percentage) from countrylanguage)
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

hard pred: select Name from country order by Population asc limit 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1

hard pred: select Name from country order by Population asc limit 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1

medium pred: select sum(T2.Population) from sqlite_sequence as T1 join country as T2 where T1.seq = 'terminal'
medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"

medium pred: select T3.CountryCode,count(*) from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode where T1.District = 'terminal' and T3.Language = 'terminal' order by T1.Population desc limit 1
medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"

medium pred: select avg(T2.LifeExpectancy) from sqlite_sequence as T1 join country as T2 where T1.name = 'terminal'
medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

medium pred: select avg(T2.Population) from sqlite_sequence as T1 join country as T2 where T1.name = 'terminal'
medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

medium pred: select sum(SurfaceArea) from country
medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

medium pred: select sum(T2.Capital) from sqlite_sequence as T1 join country as T2 where T1.name >= 'terminal' and T1.name = 'terminal'
medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

easy pred: select count(*) from city where District = 'terminal'
easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"

easy pred: select sum(T2.Population) from sqlite_sequence as T1 join country as T2 where T1.name = 'terminal'
easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"

medium pred: select sum(T2.Population) from sqlite_sequence as T1 join country as T2 where T1.name = 'terminal'
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

medium pred: select sum(T3.Percentage),sum(T2.Population) from sqlite_sequence as T1 join country as T2 join countrylanguage as T3 where T1.name != 'terminal'
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

easy pred: select count(Region) from country
easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage

easy pred: select count(*) from country where Region = 'terminal'
easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"

easy pred: select count(GovernmentForm) from country where Code = 'terminal'
easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"

medium pred: select count(*) from country where Region = 'terminal'
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

medium pred: select count(Language) from countrylanguage where Language = 'terminal'
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

medium pred: select count(T1.Code2) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 'terminal'
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

medium pred: select count(*) from countrylanguage where Language = 'terminal'
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

extra pred: select Code2 from country group by Code2 order by count(*) desc limit 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

extra pred: select name from sqlite_sequence group by name order by count(*) desc limit 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

extra pred: select Continent from country group by Continent order by count(*) desc limit 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

extra pred: select Continent from country group by Continent order by count(*) desc limit 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

easy pred: select count(*) from country where GovernmentForm = 'terminal'
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

easy pred: select count(*) from country where Name = 'terminal'
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

extra pred: select Name from country where Region = 'terminal' intersect select Name from country where Region = 'terminal'
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

extra pred: select Name from country where Region = 'terminal' intersect select Name from country where GovernmentForm = 'terminal'
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

extra pred: select Name from country intersect select Name from country where GovernmentForm = 'terminal'
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

extra pred: select Name from country intersect select Name from country where GovernmentForm = 'terminal'
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

medium pred: select count(District) from city
medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

medium pred: select count(*) from city where District = 'terminal'
medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

hard pred: select T2.CountryCode from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Region != 'terminal' and T1.Region = 'terminal'
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

hard pred: select T2.Region from sqlite_sequence as T1 join country as T2 where T1.name >= 'terminal' and T1.name = 'terminal'
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

extra pred: select Continent from country union select T2.Continent from sqlite_sequence as T1 join country as T2 where T1.seq = 'terminal'
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

extra pred: select T2.Continent from sqlite_sequence as T1 join country as T2 where T1.seq = 'terminal' union select Region from country where GovernmentForm = 'terminal'
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

extra pred: select Continent from country group by Continent order by count(*) desc limit 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

extra pred: select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.GovernmentForm = 'terminal'
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

hard pred: select Language from countrylanguage
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

hard pred: select T2.CountryCode from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Capital = 'terminal'
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

extra pred: select District from city where Population = (select max(Population) from city where District = 'terminal')
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

extra pred: select T1.District from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.LocalName = 'terminal' and T1.Population = (select max(District) from city where District = 'terminal')
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

hard pred: select Continent,Name,Population from country order by Population desc limit 1
hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1

hard pred: select T1.Name,T3.CountryCode,T2.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode order by T1.Population desc limit 1
hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1

extra pred: select avg(T2.Population) from sqlite_sequence as T1 join country as T2 where T1.name != 'terminal'
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

extra pred: select sum(T2.LifeExpectancy) from sqlite_sequence as T1 join country as T2 where T1.name != 'terminal'
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

extra pred: select sum(T2.Population) from sqlite_sequence as T1 join country as T2 where T1.name not in (select T2.Code from sqlite_sequence as T1 join country as T2 where T1.seq = 'terminal')
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

extra pred: select count(T1.Code2) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language != 'terminal'
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

medium pred: select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Region = 'terminal'
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

medium pred: select Language from countrylanguage where IsOfficial = 'terminal'
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

medium pred: select sum(Continent) from country where GNPOld < 'terminal'
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

medium pred: select count(Code2) from country group by Code2
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

hard pred: select Continent from country where Population > 'terminal'
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

hard pred: select Continent from country where Population > 'terminal'
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

extra pred: select Continent from country where Population < (select min(T2.Population) from sqlite_sequence as T1 join country as T2 where T1.seq = 'terminal')
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")

extra pred: select Continent from country where Population < (select min(T2.Population) from sqlite_sequence as T1 join country as T2 where T1.seq = 'terminal')
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")

extra pred: select Continent from country where Population > 'terminal'
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")

extra pred: select Continent from country where Population > 'terminal'
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")

hard pred: select Continent from country where Code != 'terminal'
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

hard pred: select Region from country where Name != 'terminal'
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

easy pred: select Continent from country where Code = 'terminal'
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"

easy pred: select Continent from country where Code != 'terminal'
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"

hard pred: select Region from country where GovernmentForm = 'terminal' except select Continent from country where GovernmentForm != 'terminal'
hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

hard pred: select Code from country except select Code from country where GovernmentForm = 'terminal'
hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

extra pred: select Name from city where District != 'terminal'
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

extra pred: select Name from city where District != 'terminal'
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

medium pred: select T1.District from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.LocalName = 'terminal'
medium gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

medium pred: select Name from city where Population = (select max(Population) from city)
medium gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

medium pred: select T2.Region,T1.District,T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T2.IndepYear asc limit 1
medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1

medium pred: select T1.Name,T2.Continent,T2.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.Population asc limit 1
medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1

medium pred: select Name,Region,Continent from country order by GNPOld desc limit 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select T1.Name,T1.District,T2.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.Population desc limit 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select T1.Code2,T2.CountryCode from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode group by T2.CountryCode having count(T2.CountryCode) >= 'terminal'
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

medium pred: select Code2,count(*) from country group by Code2 having count(*) > 'terminal'
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

extra pred: select T1.District,T3.CountryCode from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode group by T1.District
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

extra pred: select Name,District from city group by ID having count(*) > 'terminal'
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

medium pred: select Population,District from city group by District
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

medium pred: select sum(T2.Percentage),sum(T1.Population) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode group by T1.Code
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

medium pred: select avg(T2.Population),T1.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T1.Name
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

medium pred: select avg(T2.Population),T1.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T1.ID having count(*) > 'terminal'
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

medium pred: select Continent,Name from country order by GNPOld desc limit 1
medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

medium pred: select T1.name,T2.Name from sqlite_sequence as T1 join country as T2 order by T2.Population desc limit 1
medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

medium pred: select Name from country group by Name order by count(*) desc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

medium pred: select Name from country group by LocalName order by count(*) asc limit 1
medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3

easy pred: select count(Code2) from country where GovernmentForm = 'terminal'
easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"

easy pred: select count(*) from country where Region = 'terminal'
easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"

medium pred: select T2.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode where T3.Language = 'terminal' and T1.Name = 'terminal'
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

medium pred: select Name from country where Population = 'terminal'
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

hard pred: select sum(T1.Population),T2.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.Name = 'terminal'
hard gold: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

eval_err_num:7
hard pred: select sum(T2.Population) from sqlite_sequence as T1 join country as T2 where T1.name in (select T2.CountryCode from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.SurfaceArea > 'terminal')
hard gold: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

easy pred: select T3.CountryCode from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode where T1.Population between 'terminal' and 'terminal'
easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000

medium pred: select T1.name,T3.Language from sqlite_sequence as T1 join country as T2 join countrylanguage as T3 group by T2.Code order by count(*) desc limit 1
medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode

medium pred: select T1.Continent,T2.CountryCode from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode group by T2.CountryCode order by count(*) desc limit 1
medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode

extra pred: select count(*) from country order by Population desc limit 1
extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

extra pred: select count(*) from country where Continent = 'terminal'
extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

medium pred: select Code from country order by Capital desc limit 1
medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

medium pred: select T2.Code from sqlite_sequence as T1 join country as T2 where T1.name = 'terminal'
medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

medium pred: select max(T2.Attendance),min(T2.Attendance) from performance as T1 join show as T2 on T1.Performance_ID = T2.Performance_ID where T1.Type != 'terminal'
medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"

medium pred: select max(T2.Attendance),min(T2.Attendance) from performance as T1 join show as T2 on T1.Performance_ID = T2.Performance_ID where T1.Type != 'terminal'
medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"

easy pred: select Name from conductor order by Age desc
easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC

easy pred: select Name from conductor order by Age desc
easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC

medium pred: select Name from conductor order by Age desc limit 1
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1

medium pred: select Name from conductor order by Age desc limit 1
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1

medium pred: select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Orchestra = 'terminal'
medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID

medium pred: select Name from conductor group by Conductor_ID having count(*) > 'terminal'
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1

medium pred: select Name from conductor group by Conductor_ID having count(*) > 'terminal'
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1

extra pred: select Name from conductor group by Conductor_ID order by count(*) desc limit 1
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

medium pred: select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Orchestra > 'terminal'
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008

medium pred: select Orchestra,count(*) from orchestra group by Orchestra
medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company

eval_err_num:8
medium pred: select T1.Major_Record_Format from orchestra as T1 join performance as T2 on T1.Orchestra_ID = T2.Orchestra_ID order by T2.Official_ratings_(millions) asc
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

hard pred: select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Orchestra_ID not in (select Orchestra_ID from performance)
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

hard pred: select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Orchestra_ID not in (select Orchestra_ID from performance)
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

hard pred: select Record_Company from orchestra where Record_Company < 'terminal' intersect select T1.Record_Company from orchestra as T1 join performance as T2 on T1.Orchestra_ID = T2.Orchestra_ID where T2.Type = 'terminal'
hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

hard pred: select T1.Record_Company from orchestra as T1 join performance as T2 on T1.Orchestra_ID = T2.Orchestra_ID where T2.Type = 'terminal' intersect select T1.Record_Company from orchestra as T1 join performance as T2 on T1.Orchestra_ID = T2.Orchestra_ID where T2.Type = 'terminal'
hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

medium pred: select count(*) from orchestra where Major_Record_Format >= 'terminal' and Major_Record_Format = 'terminal'
medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

medium pred: select count(*) from conductor where Nationality = 'terminal'
medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

medium pred: select Year_of_Founded from orchestra group by Year_of_Founded having count(*) > 'terminal'
medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1

medium pred: select Year_of_Founded from orchestra group by Year_of_Founded having count(*) > 'terminal'
medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1

medium pred: select T1.grade,T1.name from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id where T2.student_id in (select ID from Highschooler)
medium gold: SELECT name ,  grade FROM Highschooler

medium pred: select T1.grade,T1.name from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id where T2.student_id not in (select name from Highschooler)
medium gold: SELECT name ,  grade FROM Highschooler

easy pred: select grade from Highschooler where name = 'terminal'
easy gold: SELECT grade FROM Highschooler

easy pred: select grade from Highschooler where grade = 'terminal'
easy gold: SELECT grade FROM Highschooler

easy pred: select grade from Highschooler where name = 'terminal'
easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"

medium pred: select grade from Highschooler where grade >= 'terminal'
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10

medium pred: select count(*) from Highschooler where grade <= 'terminal'
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10

easy pred: select grade from Highschooler where grade >= 'terminal'
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4

medium pred: select name,count(*) from Highschooler group by name
medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id

medium pred: select name,count(*) from Highschooler group by name
medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

medium pred: select count(*),name from Highschooler group by name
medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

extra pred: select name from Highschooler order by grade desc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

medium pred: select T1.name from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id where T2.friend_id in (select ID from Highschooler where name = 'terminal')
medium gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

medium pred: select T1.name from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id where T2.student_id = 'terminal'
medium gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

medium pred: select count(*) from Highschooler where name = 'terminal'
medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

medium pred: select count(*) from Highschooler where name = 'terminal'
medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

hard pred: select student_id from Friend except select student_id from Friend
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

hard pred: select student_id from Friend except select student_id from Friend
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

hard pred: select T1.name from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id where T2.student_id not in (select student_id from Friend)
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

hard pred: select T1.name from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id where T2.student_id not in (select student_id from Friend)
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

hard pred: select student_id from Friend
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

hard pred: select student_id from Friend intersect select T2.student_id from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id where T1.name = 'terminal'
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

hard pred: select name from Highschooler
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

hard pred: select name from Highschooler intersect select name from Highschooler where grade = 'terminal'
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

medium pred: select count(*),name from Highschooler
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

medium pred: select count(*),name from Highschooler group by name
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

extra pred: select name from Highschooler order by grade desc limit 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

extra pred: select name from Highschooler order by grade desc limit 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

medium pred: select student_id from Friend group by student_id having count(*) >= 'terminal'
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

medium pred: select T1.name from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id group by T2.student_id having count(*) >= 'terminal'
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

hard pred: select name from Highschooler where grade >= 'terminal'
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

hard pred: select T1.name from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id group by T2.student_id having count(*) >= 'terminal'
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

medium pred: select count(T2.liked_id) from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id where T1.name = 'terminal'
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

medium pred: select count(*) from Highschooler where name = 'terminal'
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

hard pred: select avg(grade) from Highschooler
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

hard pred: select avg(grade) from Highschooler
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

extra pred: select min(T1.grade) from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id where T2.student_id not in (select student_id from Friend)
extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

extra pred: select min(T1.grade) from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id where T2.student_id not in (select student_id from Friend)
extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

hard pred: select state from Professionals intersect select state from Professionals
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

hard pred: select state from Professionals intersect select state from Professionals
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

hard pred: select avg(T2.date_of_birth) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where T1.breed_code = 'terminal'
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

hard pred: select avg(age) from Dogs
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

extra pred: select T1.first_name,T1.home_phone,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.owner_id having count(*) > 'terminal'
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

extra pred: select T1.last_name,T4.home_phone,T1.home_phone from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.first_name = 'terminal'
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

hard pred: select name from Dogs where weight > 'terminal'
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )

hard pred: select T2.name from Charges as T1 join Dogs as T2 where T1.charge_amount > 'terminal'
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )

hard pred: select T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id where T2.size_code = 'terminal' union select T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id where T2.name = 'terminal'
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

eval_err_num:9
hard pred: select T3.first_name from Sizes as T1 join Dogs as T2 on T1.size_code = T2.size_code join Owners as T3 on T2.owner_id = T3.owner_id where T1.size_code = 'terminal' union select T3.first_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id where T1.breed_name = 'terminal'
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

extra pred: select T2.owner_id,T4.professional_id,T1.owner_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T1.state != 'terminal'
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

extra pred: select T4.professional_id,T2.owner_id,T1.owner_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.zip_code not in (select professional_id from Professionals)
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

extra pred: select T4.first_name,T1.last_name,T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.owner_id order by count(*) desc limit 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T4.last_name,T1.first_name,T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.owner_id order by count(*) desc limit 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

medium pred: select T1.first_name,T1.city,T4.city from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.city having count(*) >= 'terminal'
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

medium pred: select T4.first_name,T1.first_name,T1.owner_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.owner_id having count(*) >= 'terminal'
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

extra pred: select breed_name from Breeds group by breed_name order by count(*) desc limit 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

extra pred: select breed_name from Breeds group by breed_name order by count(*) desc limit 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

extra pred: select T4.last_name,T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.owner_id order by count(*) desc limit 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T4.last_name,T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.owner_id order by count(*) desc limit 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T2.treatment_type_description from Charges as T1 join Treatment_Types as T2 order by T1.charge_amount asc limit 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

extra pred: select T2.treatment_type_description from Charges as T1 join Treatment_Types as T2 order by T1.charge_amount asc limit 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

extra pred: select T4.last_name,T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.owner_id order by count(*) desc limit 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

extra pred: select T2.owner_id,T1.owner_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id group by T1.owner_id order by count(*) desc limit 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

medium pred: select T4.professional_id,T1.owner_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.owner_id having count(*) >= 'terminal'
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

medium pred: select T4.home_phone,T1.home_phone from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.home_phone having count(*) >= 'terminal'
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

extra pred: select T2.last_name,T2.first_name from Charges as T1 join Owners as T2 where T1.charge_amount < (select avg(charge_amount) from Charges)
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

extra pred: select T2.last_name,T2.first_name from Charges as T1 join Owners as T2 where T1.charge_amount < (select avg(charge_amount) from Charges)
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

medium pred: select T1.first_name,T2.date_of_birth from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id order by T2.date_departed asc limit 1
medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id

medium pred: select T2.date_of_treatment,T1.date_of_birth from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id join Professionals as T3 on T2.professional_id = T3.professional_id order by T3.first_name asc limit 1
medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id

medium pred: select T1.breed_name,T3.first_name,T2.name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id
medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

medium pred: select T4.first_name,T2.name,T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.owner_id
medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

medium pred: select name from Dogs
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

medium pred: select T4.first_name,T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

extra pred: select T1.breed_name,T3.first_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id order by T2.date_departed asc limit 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

extra pred: select T2.name,T1.breed_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where T2.gender = 'terminal'
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

medium pred: select T4.first_name,T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.last_name = 'terminal'
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'

medium pred: select T3.first_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id where T1.breed_name = 'terminal'
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'

medium pred: select date_arrived,date_of_birth from Dogs
medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id

medium pred: select date_arrived,date_of_birth from Dogs
medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id

extra pred: select T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id where T2.age = (select min(weight) from Dogs)
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

extra pred: select T3.last_name,T1.breed_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id order by T1.breed_name desc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

medium pred: select email_address from Professionals where state != 'terminal' and state = 'terminal'
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

medium pred: select T4.state from Sizes as T1 join Dogs as T2 on T1.size_code = T2.size_code join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T1.size_code = 'terminal' except select state from Professionals
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

medium pred: select date_adopted,date_arrived from Dogs
medium gold: SELECT date_arrived ,  date_departed FROM Dogs

medium pred: select date_of_birth,date_arrived from Dogs
medium gold: SELECT date_arrived ,  date_departed FROM Dogs

easy pred: select count(*) from Breeds
easy gold: SELECT count(DISTINCT dog_id) FROM Treatments

easy pred: select count(*) from Breeds
easy gold: SELECT count(DISTINCT dog_id) FROM Treatments

easy pred: select count(*) from Dogs where name = 'terminal'
easy gold: SELECT count(DISTINCT professional_id) FROM Treatments

easy pred: select count(*) from Owners where owner_id not in (select owner_id from Owners)
easy gold: SELECT count(DISTINCT professional_id) FROM Treatments

medium pred: select count(*),T1.city,T4.city from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.city like 'terminal'
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

medium pred: select T4.state,T1.city,T4.city from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.city like 'terminal'
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

medium pred: select T4.last_name,T1.first_name,T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T1.city like 'terminal'
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

medium pred: select T4.first_name,T1.last_name,T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T1.city like 'terminal'
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

hard pred: select count(*) from Dogs where date_of_birth < (select avg(weight) from Dogs)
hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )

hard pred: select count(*) from Dogs where date_of_birth < (select avg(weight) from Dogs)
hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )

medium pred: select cost_of_treatment from Treatments order by cost_of_treatment desc limit 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

medium pred: select cost_of_treatment from Treatments order by cost_of_treatment asc limit 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

extra pred: select count(*) from Charges where charge_id not in (select charge_id from Charges)
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

extra pred: select T2.name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where T1.breed_code = 'terminal'
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

extra pred: select count(*) from Owners where owner_id not in (select owner_id from Owners)
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

extra pred: select count(*) from Owners where owner_id not in (select owner_id from Owners)
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

extra pred: select count(*) from Owners where owner_id not in (select T4.professional_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T1.owner_id not in (select professional_id from Professionals))
extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )

extra pred: select count(*) from Owners where owner_id not in (select owner_id from Owners)
extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )

medium pred: select T2.age,T2.name,T1.breed_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Treatments as T3 on T2.dog_id = T3.dog_id join Treatment_Types as T4 on T3.treatment_type_code = T4.treatment_type_code where T4.treatment_type_description = 'terminal'
medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1

medium pred: select T3.last_name,T2.name,T1.breed_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id where T2.gender = 'terminal'
medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1

easy pred: select age from Dogs order by date_of_birth asc limit 1
easy gold: SELECT max(age) FROM Dogs

easy pred: select age from Dogs order by date_of_birth desc limit 1
easy gold: SELECT max(age) FROM Dogs

medium pred: select T2.treatment_type_code,T1.charge_amount from Charges as T1 join Treatment_Types as T2 group by T2.treatment_type_code
medium gold: SELECT charge_type ,  charge_amount FROM Charges

medium pred: select treatment_type_code,count(*) from Treatment_Types group by treatment_type_code
medium gold: SELECT charge_type ,  charge_amount FROM Charges

easy pred: select count(*) from Charges order by charge_amount desc limit 1
easy gold: SELECT max(charge_amount) FROM Charges

easy pred: select charge_amount from Charges order by charge_amount desc limit 1
easy gold: SELECT max(charge_amount) FROM Charges

medium pred: select T1.email_address,T4.home_phone,T1.home_phone from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals

medium pred: select T1.email_address,T4.home_phone,T1.home_phone from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals

medium pred: select T1.charge_type,T2.treatment_type_code from Charges as T1 join Treatment_Types as T2 group by T2.treatment_type_code
medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs

medium pred: select T1.charge_type,T2.treatment_type_code from Charges as T1 join Treatment_Types as T2 group by T2.treatment_type_code
medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs

medium pred: select T4.first_name,T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code

medium pred: select T4.first_name,T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code

medium pred: select Name from singer where Birth_Year <= 'terminal' and Birth_Year = 'terminal'
medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949

medium pred: select Name from singer where Birth_Year = 'terminal' and Birth_Year < 'terminal'
medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949

medium pred: select Name from singer order by Birth_Year desc limit 1
medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1

medium pred: select Citizenship,count(*) from singer group by Citizenship
medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship

medium pred: select Citizenship,count(*) from singer group by Citizenship
medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship

medium pred: select Name from singer group by Name having count(*) > 'terminal'
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

medium pred: select Name from singer group by Name having count(*) > 'terminal'
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

medium pred: select sum(Net_Worth_Millions),Name from singer group by Name
medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

medium pred: select sum(T2.Sales),T2.Title,T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T1.Name
medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

hard pred: select T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID where T2.Song_ID not in (select Singer_ID from song)
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

hard pred: select T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID where T2.Song_ID not in (select Singer_ID from song)
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

hard pred: select Citizenship from singer where Birth_Year > 'terminal' intersect select Citizenship from singer where Birth_Year < 'terminal'
hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955

hard pred: select Citizenship from singer where Birth_Year > 'terminal' intersect select Citizenship from singer where Birth_Year < 'terminal'
hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955

easy pred: select count(*) from Ref_Feature_Types
easy gold: SELECT count(*) FROM Other_Available_Features

medium pred: select T1.feature_type_name from Ref_Feature_Types as T1 join Other_Available_Features as T2 on T1.feature_type_code = T2.feature_type_code join Other_Property_Features as T3 on T2.feature_id = T3.feature_id join Properties as T4 on T3.property_id = T4.property_id where T4.property_name = 'terminal'
medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"

medium pred: select property_type_description from Ref_Property_Types
medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code

hard pred: select property_name from Properties where room_count > 'terminal'
hard gold: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1

                     easy                 medium               hard                 extra                all                 
count                252                  469                  153                  160                  1034                
=====================   EXECUTION ACCURACY     =====================
execution            0.246                0.162                0.190                0.113                0.000               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.381                0.141                0.183                0.037                0.190               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.720                0.455                0.682                0.455                0.553               
select(no AGG)       0.736                0.457                0.682                0.462                0.559               
where                0.402                0.231                0.154                0.000                0.227               
where(no OP)         0.420                0.288                0.277                0.162                0.300               
group(no Having)     0.545                0.454                0.625                0.738                0.556               
group                0.545                0.404                0.625                0.677                0.515               
order                0.538                0.257                0.564                0.705                0.511               
and/or               1.000                0.907                0.921                0.897                0.930               
IUEN                 0.000                0.000                0.135                0.000                0.074               
keywords             0.843                0.783                0.580                0.635                0.734               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.714                0.454                0.673                0.444                0.548               
select(no AGG)       0.730                0.456                0.673                0.450                0.554               
where                0.417                0.235                0.132                0.000                0.216               
where(no OP)         0.435                0.294                0.237                0.125                0.286               
group(no Having)     0.600                0.478                0.658                0.623                0.554               
group                0.600                0.425                0.658                0.571                0.513               
order                0.636                0.247                0.544                0.679                0.502               
and/or               0.980                0.950                0.966                0.972                0.963               
IUEN                 0.000                0.000                0.119                0.000                0.064               
keywords             0.893                0.789                0.542                0.619                0.732               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.717                0.455                0.678                0.449                0.551               
select(no AGG)       0.733                0.457                0.678                0.456                0.557               
where                0.409                0.233                0.142                1.000                0.222               
where(no OP)         0.427                0.291                0.255                0.141                0.293               
group(no Having)     0.571                0.465                0.641                0.676                0.555               
group                0.571                0.415                0.641                0.620                0.514               
order                0.583                0.252                0.554                0.692                0.506               
and/or               0.990                0.928                0.943                0.933                0.946               
IUEN                 1.000                1.000                0.127                1.000                0.068               
keywords             0.867                0.786                0.561                0.627                0.733               
