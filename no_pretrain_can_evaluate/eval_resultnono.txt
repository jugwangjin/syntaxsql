eval_err_num:1
easy pred: select a from b
easy gold: SELECT count(*) FROM singer

easy pred: select sum(*) from stadium
easy gold: SELECT count(*) FROM singer

medium pred: select T4.Name,T1.Name,T4.Age from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID order by T4.Name desc,T1.Name desc,T4.Age desc
medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC

medium pred: select T1.Name,T4.Song_Name,T4.Age from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID order by T1.Name desc,T4.Song_Name desc,T4.Age desc
medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC

eval_err_num:2
medium pred: select a from b
medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'

medium pred: select avg(Age),min(Age),max(Age) from singer
medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'

medium pred: select Song_release_year,Age from singer order by Song_release_year asc,Age asc limit 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

eval_err_num:3
medium pred: select a from b
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

easy pred: select Country from singer where Country < 'terminal'
easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20

easy pred: select Country from singer where Country > 'terminal'
easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20

medium pred: select Country,count(*) from singer group by *,Country
medium gold: SELECT country ,  count(*) FROM singer GROUP BY country

medium pred: select Country,count(*) from singer group by *,Country
medium gold: SELECT country ,  count(*) FROM singer GROUP BY country

hard pred: select Song_Name from singer order by Song_Name asc
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

eval_err_num:4
hard pred: select a from b
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

medium pred: select T4.Song_Name,T1.Location from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID where T4.Song_Name between 'terminal' and 'terminal' or T1.Location between 'terminal' and 'terminal'
medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000

medium pred: select Name,Location from stadium where Name between 'terminal' and 'terminal' or Location between 'terminal' and 'terminal'
medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000

medium pred: select Name,avg(Capacity) from stadium group by Capacity,Name order by Name desc,avg(Capacity) desc limit 1
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1

medium pred: select Name,avg(Capacity) from stadium group by Capacity,Name order by Name desc,avg(Capacity) desc limit 1
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1

medium pred: select count(*) from stadium where * not in 'terminal'
medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

medium pred: select count(*) from stadium where * not in 'terminal' and * <= 'terminal'
medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

medium pred: select Theme,concert_Name from concert group by concert_Name,Theme
medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

medium pred: select count(Stadium_ID),sum(*) from concert group by *,Stadium_ID
medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

extra pred: select Name,Capacity from stadium where Name <= 'terminal' or Capacity <= 'terminal' group by Capacity,Name order by Name desc,Capacity desc limit 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T4.Name,T1.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID group by T1.Name,T4.Name order by T4.Name desc,T1.Name desc limit 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

hard pred: select Song_release_year from singer group by Song_release_year order by Song_release_year desc limit 1
hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

hard pred: select max(Song_release_year) from singer group by Song_release_year order by max(Song_release_year) desc limit 1
hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

eval_err_num:5
hard pred: select a from b
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)

eval_err_num:6
hard pred: select a from b
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)

hard pred: select Is_male,Country from singer where Is_male > 'terminal' or Country > 'terminal' intersect select Is_male,Country from singer where Is_male > 'terminal' or Country > 'terminal'
hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30

hard pred: select concert_Name from concert where concert_Name not in 'terminal' except select concert_Name from concert where concert_Name not in 'terminal'
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

hard pred: select Name from stadium where Name not in 'terminal' except select Name from stadium where Name not in 'terminal'
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

medium pred: select T3.concert_Name,T1.Song_Name,T3.Theme from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID group by T3.Theme,T1.Song_Name,T3.concert_Name
medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

medium pred: select T1.Name,T4.Song_Name,T2.Theme from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID group by T2.Theme,T4.Song_Name,T1.Name
medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

medium pred: select T3.concert_Name,T1.Song_Name from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID group by T1.Song_Name,T3.concert_Name
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

medium pred: select T3.concert_Name,T1.Song_Name from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID group by T1.Song_Name,T3.concert_Name
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

medium pred: select Song_Name from singer where Song_Name = 'terminal'
medium gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014

medium pred: select Song_Name from singer where Song_Name = 'terminal'
medium gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014

medium pred: select Is_male,Song_Name from singer where Is_male like 'terminal' or Song_Name like 'terminal'
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

eval_err_num:7
medium pred: select a from b
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

extra pred: select Name,Location from stadium where Name = 'terminal' or Location = 'terminal' intersect select Name,Location from stadium where Name = 'terminal' or Location = 'terminal'
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015

extra pred: select Name,Location from stadium where Name not in 'terminal' or Location not in 'terminal' intersect select Name,Location from stadium where Name not in 'terminal' or Location not in 'terminal'
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015

hard pred: select count(*) from stadium order by count(*) desc limit 1
hard gold: SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1

eval_err_num:8
hard pred: select a from b
hard gold: SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1

easy pred: select * from Student where * > 'terminal'
easy gold: SELECT count(*) FROM pets WHERE weight  >  10

easy pred: select * from Student where * > 'terminal'
easy gold: SELECT count(*) FROM pets WHERE weight  >  10

medium pred: select weight from Pets order by weight asc limit 1
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:9
medium pred: select a from b
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

medium pred: select PetType,max(weight) from Pets group by weight,PetType
medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType

medium pred: select max(weight),max(PetType) from Pets group by PetType,weight
medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType

medium pred: select count(*) from Student where * > 'terminal'
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

medium pred: select sum(*) from Student where * > 'terminal'
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

eval_err_num:10
medium pred: select a from b
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

medium pred: select count(*) from Student where * = 'terminal'
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

hard pred: select Fname from Student where Fname in 'terminal' and Fname = 'terminal'
hard gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

hard pred: select Fname from Student where Fname = 'terminal'
hard gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

extra pred: select Fname from Student where Fname = 'terminal' intersect select Fname from Student where Fname = 'terminal'
extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: select Fname from Student where Fname = 'terminal' intersect select Fname from Student where Fname = 'terminal'
extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: select Major,Age from Student where Major != 'terminal' or Age != 'terminal'
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:11
extra pred: select a from b
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:12
hard pred: select a from b
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:13
hard pred: select a from b
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:14
extra pred: select a from b
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:15
extra pred: select a from b
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

medium pred: select weight,PetType from Pets order by weight asc,PetType asc limit 1
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:16
medium pred: select a from b
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

medium pred: select T3.pet_age,T1.Age from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.pet_age > 'terminal' or T1.Age > 'terminal'
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

medium pred: select T3.pet_age,T1.Age from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.pet_age > 'terminal' or T1.Age > 'terminal'
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

medium pred: select PetType,max(weight),avg(weight) from Pets group by weight,PetType
medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype

medium pred: select max(pet_age),avg(pet_age),max(weight),avg(weight) from Pets group by weight,pet_age
medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype

medium pred: select PetType,avg(weight) from Pets group by weight,PetType
medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype

medium pred: select PetType,avg(weight) from Pets group by weight,PetType
medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype

medium pred: select Age,Fname from Student
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select T3.pet_age,T1.Age from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:17
medium pred: select a from b
medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

eval_err_num:18
medium pred: select a from b
medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

medium pred: select PetID,* from Has_Pet group by *,PetID
medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid

medium pred: select T2.PetID,T1.PetID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.PetID in 'terminal' or T1.PetID in 'terminal' group by T1.PetID,T2.PetID
medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid

eval_err_num:19
medium pred: select a from b
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1

eval_err_num:20
medium pred: select a from b
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1

medium pred: select LName from Student where LName in 'terminal'
medium gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

medium pred: select LName from Student where LName in 'terminal'
medium gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

eval_err_num:21
extra pred: select a from b
extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

eval_err_num:22
extra pred: select a from b
extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

medium pred: select T1.CountryId,T2.Country,sum(*) from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by *,T2.Country,T1.CountryId
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

medium pred: select T2.FullName,T1.CountryName,T2.Country from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by T2.Country,T1.CountryName,T2.FullName
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

easy pred: select count(*) from continents
easy gold: SELECT count(*) FROM COUNTRIES;

easy pred: select count(*) from continents
easy gold: SELECT count(*) FROM COUNTRIES;

medium pred: select T4.Id,T1.Id,T3.MakeId from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T3.MakeId,T1.Id,T4.Id
medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

medium pred: select T1.CountryName,T4.MakeId,T2.FullName,* from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model group by *,T2.FullName,T4.MakeId,T1.CountryName
medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

hard pred: select min(Accelerate) from cars_data order by min(Accelerate) asc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

hard pred: select avg(Accelerate) from cars_data order by avg(Accelerate) asc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:23
extra pred: select a from b
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:24
extra pred: select a from b
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

medium pred: select FullName from car_makers where FullName = 'terminal'
medium gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

medium pred: select CountryName from countries where CountryName = 'terminal'
medium gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

extra pred: select Accelerate,max(Year) from cars_data order by Accelerate asc,max(Year) asc limit 1
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

eval_err_num:25
extra pred: select a from b
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

medium pred: select Year from cars_data where Year > 'terminal'
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

medium pred: select count(Model) from car_names where Model > 'terminal'
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

medium pred: select CountryName,count(*) from countries group by *,CountryName
medium gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

medium pred: select Horsepower,count(*) from cars_data group by *,Horsepower
medium gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

extra pred: select Country from car_makers group by Country order by Country desc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

extra pred: select Country from car_makers group by Country order by Country desc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

medium pred: select FullName,* from car_makers group by *,FullName
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

medium pred: select Maker,FullName,count(*) from car_makers group by *,FullName,Maker
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

medium pred: select Year from cars_data where Year = 'terminal'
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

medium pred: select Accelerate from cars_data where Accelerate = 'terminal'
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

medium pred: select count(*) from continents
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

medium pred: select count(*) from continents where * = 'terminal'
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

medium pred: select count(*) from continents
medium gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

eval_err_num:26
medium pred: select a from b
medium gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

easy pred: select avg(MPG) from cars_data group by MPG having avg(MPG) = 'terminal'
easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;

easy pred: select avg(Weight) from cars_data where Weight = 'terminal'
easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;

hard pred: select avg(Weight) from cars_data order by avg(Weight) asc limit 1
hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;

hard pred: select Weight from cars_data where Weight = 'terminal' order by Weight asc limit 1
hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;

medium pred: select T3.Model,T1.Country from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model
medium gold: SELECT Maker ,  Model FROM MODEL_LIST;

medium pred: select Weight,Accelerate from cars_data
medium gold: SELECT Maker ,  Model FROM MODEL_LIST;

eval_err_num:27
medium pred: select T2.Id,T1.CountryId from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by T1.CountryId,T2.Id having T2.Id not in 'terminal',T1.CountryId not in 'terminal'
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

eval_err_num:28
medium pred: select T1.CountryName,T2.Country from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by T2.Country,T1.CountryName having T1.CountryName >= 'terminal',T2.Country >= 'terminal'
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

easy pred: select Horsepower from cars_data where Horsepower > 'terminal'
easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;

easy pred: select count(Horsepower) from cars_data where Horsepower > 'terminal'
easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;

medium pred: select avg(Year),avg(Weight) from cars_data group by Weight,Year
medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;

medium pred: select avg(Weight),avg(Year) from cars_data group by Year,Weight
medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;

hard pred: select Country from car_makers group by Country having Country >= 'terminal'
hard gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

hard pred: select CountryName from countries group by CountryName having CountryName >= 'terminal'
hard gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

extra pred: select max(Horsepower) from cars_data order by max(Horsepower) asc limit 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

extra pred: select Weight,Horsepower from cars_data order by Weight desc,Horsepower desc limit 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

hard pred: select min(Accelerate) from cars_data group by Accelerate order by min(Accelerate) desc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

hard pred: select Horsepower from cars_data order by Horsepower desc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

eval_err_num:29
easy pred: select a from b
easy gold: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;

eval_err_num:30
easy pred: select a from b
easy gold: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;

medium pred: select avg(Year) from cars_data order by avg(Year) asc limit 1
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

medium pred: select avg(Weight) from cars_data
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

medium pred: select max(Accelerate),max(Cylinders) from cars_data group by Cylinders,Accelerate
medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;

medium pred: select max(Accelerate),max(Cylinders) from cars_data group by Cylinders,Accelerate
medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;

hard pred: select Model from car_names
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

hard pred: select Model from car_names group by Model order by Model asc limit 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

easy pred: select * from continents group by * having * > 'terminal'
easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;

easy pred: select * from continents group by * having * > 'terminal'
easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;

easy pred: select count(*) from continents where * = 'terminal'
easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;

easy pred: select count(*),count(Horsepower) from cars_data
easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;

medium pred: select count(*) from continents where * = 'terminal'
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

eval_err_num:31
medium pred: select a from b
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

eval_err_num:32
medium pred: select T3.MakeId,T4.Id,T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T1.Id,T4.Id,T3.MakeId having T3.MakeId > 'terminal',T4.Id > 'terminal',T1.Id > 'terminal'
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:33
medium pred: select T1.Id,T4.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T4.Id,T1.Id having T1.Id > 'terminal',T4.Id > 'terminal'
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

hard pred: select Maker from car_makers where Maker > 'terminal'
hard gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

hard pred: select Model from car_names where Model > 'terminal'
hard gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

medium pred: select Horsepower from cars_data where Horsepower < 'terminal' intersect select Horsepower from cars_data where Horsepower < 'terminal'
medium gold: SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;

medium pred: select Weight from cars_data where Weight > 'terminal'
medium gold: SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;

medium pred: select Horsepower from cars_data order by Horsepower desc limit 1
medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;

medium pred: select Horsepower from cars_data order by Horsepower desc limit 1
medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;

extra pred: select T1.Make,T2.Horsepower from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id order by T1.Make asc,T2.Horsepower asc limit 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

extra pred: select T1.Model,T2.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model where T1.Model = 'terminal' or T2.Model = 'terminal'
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

eval_err_num:34
hard pred: select a from b
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

eval_err_num:35
hard pred: select a from b
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

easy pred: select count(*) from continents group by * having count(*) > 'terminal'
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );

easy pred: select sum(*) from continents group by * having sum(*) > 'terminal'
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );

easy pred: select count(*) from continents where * > 'terminal'
easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;

easy pred: select * from continents where * > 'terminal'
easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;

extra pred: select Horsepower from cars_data order by Horsepower desc limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

extra pred: select Cylinders from cars_data order by Cylinders desc limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:36
extra pred: select Horsepower,Cylinders from cars_data where Horsepower > 'terminal' or Cylinders > 'terminal' group by Cylinders,Horsepower having Horsepower > 'terminal',Cylinders > 'terminal' except select Horsepower,Cylinders from cars_data where Horsepower > 'terminal' or Cylinders > 'terminal' group by Cylinders,Horsepower having Horsepower > 'terminal',Cylinders > 'terminal'
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;

extra pred: select T4.Id,T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Id < 'terminal' or T1.Id < 'terminal'
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;

extra pred: select max(Year) from cars_data where Year < 'terminal' order by max(Year) asc limit 1
extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;

extra pred: select max(Year) from cars_data where Year < 'terminal'
extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;

eval_err_num:37
medium pred: select a from b
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

eval_err_num:38
medium pred: select a from b
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

eval_err_num:39
hard pred: select a from b
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

eval_err_num:40
hard pred: select a from b
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

eval_err_num:41
extra pred: select T1.CountryName,T2.FullName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by T2.FullName,T1.CountryName having T1.CountryName > 'terminal',T2.FullName > 'terminal' intersect select T1.CountryName,T2.FullName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by T2.FullName,T1.CountryName having T1.CountryName > 'terminal',T2.FullName > 'terminal'
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:42
extra pred: select T4.Id,T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T1.Id,T4.Id having T4.Id > 'terminal',T1.Id > 'terminal'
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:43
extra pred: select CountryId,CountryName from countries group by CountryName,CountryId having CountryId > 'terminal',CountryName > 'terminal' union select CountryId,CountryName from countries group by CountryName,CountryId having CountryId > 'terminal',CountryName > 'terminal'
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';

eval_err_num:44
extra pred: select CountryName,CountryId from countries group by CountryId,CountryName having CountryName > 'terminal',CountryId > 'terminal' union select CountryName,CountryId from countries group by CountryId,CountryName having CountryName > 'terminal',CountryId > 'terminal'
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';

easy pred: select Country from airlines where Country = 'terminal'
easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select Country from airlines where Country = 'terminal'
easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select Abbreviation from airlines where Abbreviation = 'terminal'
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select SourceAirport from flights where SourceAirport = 'terminal'
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

medium pred: select T2.AirportName,T1.Airline from airlines as T1 join airports as T2 where T2.AirportName like 'terminal' or T1.Airline like 'terminal'
medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"

medium pred: select T2.AirportName,T1.Airline from airlines as T1 join airports as T2 where T2.AirportName = 'terminal' or T1.Airline = 'terminal'
medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"

medium pred: select AirportCode,City from airports where AirportCode = 'terminal' or City = 'terminal'
medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"

medium pred: select City,AirportCode from airports where City = 'terminal' or AirportCode = 'terminal'
medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"

easy pred: select sum(*) from airlines
easy gold: SELECT count(*) FROM AIRLINES

easy pred: select count(*) from airlines
easy gold: SELECT count(*) FROM AIRPORTS

easy pred: select count(*) from airlines
easy gold: SELECT count(*) FROM AIRPORTS

easy pred: select count(*) from airlines
easy gold: SELECT count(*) FROM FLIGHTS

easy pred: select count(*) from airlines
easy gold: SELECT count(*) FROM FLIGHTS

easy pred: select Airline from airlines where Airline like 'terminal'
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

easy pred: select Airline from airlines where Airline = 'terminal'
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

easy pred: select count(*) from airlines where * = 'terminal'
easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"

easy pred: select count(*) from airlines where * = 'terminal'
easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"

medium pred: select T1.Country,T2.City from airlines as T1 join airports as T2 where T1.Country = 'terminal' or T2.City = 'terminal'
medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"

medium pred: select T2.DestAirport,T1.City from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T2.DestAirport = 'terminal' or T1.City = 'terminal'
medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"

easy pred: select AirportName from airports where AirportName = 'terminal'
easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"

easy pred: select AirportName from airports where AirportName = 'terminal'
easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"

easy pred: select AirportName from airports where AirportName = 'terminal'
easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"

easy pred: select AirportName from airports where AirportName = 'terminal'
easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"

easy pred: select count(*) from airlines where * = 'terminal'
easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select count(*) from airlines where * = 'terminal'
easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select count(*) from airlines where * = 'terminal'
easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"

easy pred: select count(*) from airlines where * = 'terminal'
easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

medium pred: select count(FlightNo) from flights where FlightNo = 'terminal'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

medium pred: select count(*) from airlines where * = 'terminal'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

extra pred: select City from airports group by City order by City desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

extra pred: select City from airports group by City order by City desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

extra pred: select City from airports group by City order by City asc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

extra pred: select City from airports group by City order by City desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

extra pred: select AirportCode from airports group by AirportCode order by AirportCode asc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

extra pred: select AirportName from airports group by AirportName order by AirportName asc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

extra pred: select AirportCode from airports group by AirportCode order by AirportCode asc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

extra pred: select AirportCode from airports order by AirportCode asc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

extra pred: select * from airlines group by * order by * asc limit 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

extra pred: select * from airlines group by * order by * asc limit 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

extra pred: select T2.Country,T1.Country from airlines as T1 join airports as T2 group by T1.Country,T2.Country order by T2.Country asc,T1.Country asc limit 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

extra pred: select Abbreviation,* from airlines group by *,Abbreviation order by Abbreviation asc,* asc limit 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

medium pred: select Country from airlines where Country = 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

medium pred: select Country from airlines where Country = 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

medium pred: select * from airlines where * = 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

medium pred: select Airline from airlines where Airline in 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

extra pred: select Country from airlines where Country = 'terminal' intersect select Country from airlines where Country = 'terminal'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

extra pred: select Country,* from airlines where Country >= 'terminal' or Country <= 'terminal' or * >= 'terminal' or * <= 'terminal' intersect select Country,* from airlines where Country >= 'terminal' or Country <= 'terminal' or * >= 'terminal' or * <= 'terminal'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

extra pred: select Country from airlines where Country != 'terminal' except select Country from airlines where Country != 'terminal'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

extra pred: select Country,* from airlines where Country not in 'terminal' or * not in 'terminal' except select Country,* from airlines where Country not in 'terminal' or * not in 'terminal'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

medium pred: select * from airlines group by * having * >= 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

medium pred: select * from airlines group by * having * >= 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

medium pred: select * from airlines where * < 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

medium pred: select * from airlines where * < 'terminal'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

medium pred: select FlightNo from flights where FlightNo = 'terminal'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

medium pred: select FlightNo from flights where FlightNo = 'terminal'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

easy pred: select FlightNo from flights where FlightNo = 'terminal'
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select FlightNo from flights where FlightNo = 'terminal'
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select FlightNo from flights where FlightNo = 'terminal'
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

easy pred: select FlightNo from flights where FlightNo = 'terminal'
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

medium pred: select FlightNo from flights where FlightNo = 'terminal'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select FlightNo from flights where FlightNo = 'terminal'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select FlightNo from flights where FlightNo = 'terminal'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select FlightNo from flights where FlightNo = 'terminal'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

hard pred: select count(*) from airlines where * <= 'terminal' and * = 'terminal'
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

hard pred: select count(*) from airlines where * >= 'terminal' and * <= 'terminal'
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

hard pred: select AirportName from airports where AirportName not in 'terminal' except select AirportName from airports where AirportName not in 'terminal'
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

hard pred: select * from airlines where * <= 'terminal' and * not in 'terminal'
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

easy pred: select sum(*) from employee
easy gold: SELECT count(*) FROM employee

easy pred: select Employee_ID from evaluation order by Employee_ID asc
easy gold: SELECT name FROM employee ORDER BY age

easy pred: select Manager_name from shop order by Manager_name asc
easy gold: SELECT name FROM employee ORDER BY age

medium pred: select City,count(*) from employee group by *,City
medium gold: SELECT count(*) ,  city FROM employee GROUP BY city

medium pred: select City,* from employee group by *,City
medium gold: SELECT count(*) ,  city FROM employee GROUP BY city

medium pred: select City from employee where City > 'terminal'
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1

medium pred: select City from employee where City > 'terminal'
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1

medium pred: select count(City),count(*) from employee group by *,City
medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION

medium pred: select City,count(*) from employee group by *,City
medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION

medium pred: select T1.Name,T3.Manager_name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID order by T1.Name desc,T3.Manager_name desc limit 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

medium pred: select T3.Name,T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID group by T1.Name,T3.Name order by T3.Name desc,T1.Name desc limit 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

medium pred: select T3.Name,T1.Name,T3.Location from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID order by T3.Name desc,T1.Name desc,T3.Location desc
medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC

medium pred: select T1.City,T3.Name,T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID order by T1.City asc,T3.Name asc,T1.Name asc
medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC

eval_err_num:45
hard pred: select a from b
hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)

eval_err_num:46
hard pred: select a from b
hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)

extra pred: select Manager_name from shop group by Manager_name order by Manager_name desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

extra pred: select Employee_ID from employee group by Employee_ID order by Employee_ID desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

hard pred: select Manager_name from shop order by Manager_name asc limit 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

hard pred: select Employee_ID from employee group by Employee_ID order by Employee_ID desc limit 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

eval_err_num:47
hard pred: select a from b
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

eval_err_num:48
hard pred: select a from b
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

extra pred: select Name from employee group by Name order by Name desc limit 1
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1

extra pred: select Name from employee group by Name order by Name desc limit 1
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1

hard pred: select Name from employee where Name not in 'terminal'
hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

eval_err_num:49
hard pred: select a from b
hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

medium pred: select City,* from employee group by *,City
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

medium pred: select count(Name),count(*) from employee group by *,Name
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

easy pred: select * from employee
easy gold: SELECT * FROM hiring

easy pred: select * from employee
easy gold: SELECT * FROM hiring

hard pred: select District from shop where District > 'terminal' intersect select District from shop where District > 'terminal'
hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000

hard pred: select District from shop where District > 'terminal' intersect select District from shop where District > 'terminal'
hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(*) FROM Documents

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(*) FROM Documents

medium pred: select T1.Document_Name,T2.Paragraph_Text,T1.Document_Description from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID
medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents

medium pred: select T3.Document_ID,T2.Document_Description,T1.Version_Number from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID join Paragraphs as T3 on T2.Document_ID = T3.Document_ID
medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents

medium pred: select T1.Template_ID,T2.Document_Name from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T1.Template_ID like 'terminal' or T2.Document_Name like 'terminal'
medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"

medium pred: select T2.Document_ID,T1.Document_Name from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T2.Document_ID like 'terminal' or T1.Document_Name like 'terminal'
medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"

medium pred: select T3.Document_ID,T2.Template_ID,T1.Template_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID join Paragraphs as T3 on T2.Document_ID = T3.Document_ID where T3.Document_ID = 'terminal' or T2.Template_ID = 'terminal' or T1.Template_ID = 'terminal'
medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"

medium pred: select T3.Document_ID,T2.Template_ID,T1.Template_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID join Paragraphs as T3 on T2.Document_ID = T3.Document_ID where T3.Document_ID = 'terminal' or T2.Template_ID = 'terminal' or T1.Template_ID = 'terminal'
medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(DISTINCT template_id) FROM Documents

easy pred: select count(Document_Name) from Documents
easy gold: SELECT count(DISTINCT template_id) FROM Documents

medium pred: select count(*) from Ref_Template_Types where * = 'terminal'
medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'

medium pred: select count(*) from Ref_Template_Types where * = 'terminal'
medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'

medium pred: select Template_ID,* from Templates group by *,Template_ID
medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id

medium pred: select Template_Type_Code,count(*) from Ref_Template_Types group by *,Template_Type_Code
medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id

extra pred: select T2.Template_ID,T1.Template_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T1.Template_ID,T2.Template_ID order by T2.Template_ID asc,T1.Template_ID asc limit 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T1.Template_Type_Code,T2.Template_Type_Code order by T2.Template_Type_Code desc,T1.Template_Type_Code desc limit 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:50
easy pred: select a from b
easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1

eval_err_num:51
easy pred: select a from b
easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1

eval_err_num:52
hard pred: select a from b
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

eval_err_num:53
hard pred: select a from b
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(*) FROM Templates

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(*) FROM Templates

medium pred: select T2.Template_ID,T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates

medium pred: select T4.Paragraph_Text,T2.Version_Number,T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID join Paragraphs as T4 on T3.Document_ID = T4.Document_ID group by T1.Template_Type_Code,T2.Template_Type_Code,T2.Version_Number,T4.Paragraph_Text
medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT DISTINCT template_type_code FROM Templates

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT DISTINCT template_type_code FROM Templates

medium pred: select Document_ID from Paragraphs where Document_ID >= 'terminal' and Document_ID <= 'terminal'
medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"

medium pred: select Template_ID from Templates where Template_ID >= 'terminal' and Template_ID <= 'terminal'
medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"

easy pred: select count(Template_Type_Code) from Ref_Template_Types where Template_Type_Code like 'terminal'
easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"

easy pred: select count(*) from Ref_Template_Types where * = 'terminal'
easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"

medium pred: select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Template_Type_Code < 'terminal' or T1.Template_Type_Code < 'terminal'
medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5

medium pred: select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Template_Type_Code > 'terminal' or T1.Template_Type_Code > 'terminal'
medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5

medium pred: select Template_Type_Code,count(*) from Ref_Template_Types group by *,Template_Type_Code
medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code

medium pred: select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T1.Template_Type_Code,T2.Template_Type_Code
medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code

hard pred: select Template_Type_Code from Ref_Template_Types group by Template_Type_Code order by Template_Type_Code desc limit 1
hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1

hard pred: select Template_Type_Code from Ref_Template_Types group by Template_Type_Code order by Template_Type_Code desc limit 1
hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1

easy pred: select Template_Type_Code from Ref_Template_Types group by Template_Type_Code having Template_Type_Code < 'terminal'
easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3

easy pred: select Template_Type_Code from Ref_Template_Types group by Template_Type_Code having Template_Type_Code < 'terminal'
easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3

medium pred: select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T1.Template_Type_Code,T2.Template_Type_Code
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

medium pred: select T4.Paragraph_Text,T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID join Paragraphs as T4 on T3.Document_ID = T4.Document_ID group by T1.Template_Type_Code,T2.Template_Type_Code,T4.Paragraph_Text
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

medium pred: select Template_Type_Code from Ref_Template_Types where Template_Type_Code = 'terminal'
medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"

medium pred: select Template_Type_Code from Ref_Template_Types where Template_Type_Code = 'terminal'
medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"

medium pred: select Document_Name from Documents where Document_Name = 'terminal'
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"

eval_err_num:54
medium pred: select a from b
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"

medium pred: select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T1.Template_Type_Code,T2.Template_Type_Code
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

medium pred: select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T1.Template_Type_Code,T2.Template_Type_Code
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

extra pred: select Template_Type_Code from Ref_Template_Types group by Template_Type_Code order by Template_Type_Code desc limit 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

extra pred: select Template_Type_Code from Ref_Template_Types group by Template_Type_Code order by Template_Type_Code desc limit 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:55
hard pred: select a from b
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

hard pred: select Template_Type_Code from Ref_Template_Types except select Template_Type_Code from Ref_Template_Types
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

medium pred: select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

medium pred: select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

easy pred: select Template_Type_Code from Ref_Template_Types where Template_Type_Code = 'terminal'
easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"

eval_err_num:56
easy pred: select a from b
easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"

easy pred: select Template_Type_Code from Ref_Template_Types where Template_Type_Code = 'terminal'
easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"

easy pred: select Template_Type_Code from Ref_Template_Types where Template_Type_Code = 'terminal'
easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"

eval_err_num:57
easy pred: select a from b
easy gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

easy pred: select * from Ref_Template_Types
easy gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

medium pred: select Template_ID from Templates where Template_ID = 'terminal'
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

medium pred: select Document_ID from Paragraphs where Document_ID = 'terminal'
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

easy pred: select sum(*) from Ref_Template_Types
easy gold: SELECT count(*) FROM Paragraphs

easy pred: select count(*) from Ref_Template_Types
easy gold: SELECT count(*) FROM Paragraphs

medium pred: select count(Paragraph_Text) from Paragraphs where Paragraph_Text = 'terminal'
medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

medium pred: select count(*) from Ref_Template_Types where * = 'terminal'
medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

easy pred: select Other_Details from Paragraphs where Other_Details > 'terminal'
easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'

easy pred: select Document_Description from Documents where Document_Description like 'terminal'
easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'

medium pred: select T1.Document_ID,T2.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_ID = 'terminal' or T2.Document_ID = 'terminal'
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

medium pred: select T1.Document_ID,T2.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_ID like 'terminal' or T2.Document_ID like 'terminal'
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

medium pred: select Paragraph_Text from Paragraphs where Paragraph_Text = 'terminal'
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"

medium pred: select Document_Description from Documents where Document_Description = 'terminal'
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"

medium pred: select Paragraph_ID,* from Paragraphs group by *,Paragraph_ID
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

medium pred: select Paragraph_ID,* from Paragraphs group by *,Paragraph_ID
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

medium pred: select T2.Paragraph_Text,T1.Document_Name,count(*) from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by *,T1.Document_Name,T2.Paragraph_Text
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

medium pred: select T2.Document_ID,T1.Document_Name,* from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by *,T1.Document_Name,T2.Document_ID
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

easy pred: select Document_ID from Paragraphs group by Document_ID having Document_ID >= 'terminal'
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2

easy pred: select Document_ID from Paragraphs group by Document_ID having Document_ID >= 'terminal'
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2

extra pred: select T1.Document_ID,T2.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by T2.Document_ID,T1.Document_ID order by T1.Document_ID desc,T2.Document_ID desc limit 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.Document_ID,T2.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by T2.Document_ID,T1.Document_ID order by T1.Document_ID asc,T2.Document_ID asc limit 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

hard pred: select Document_ID from Paragraphs group by Document_ID order by Document_ID asc limit 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1

hard pred: select Document_ID from Paragraphs group by Document_ID order by Document_ID asc limit 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:58
easy pred: select Document_ID from Paragraphs group by Document_ID having Document_ID between 'terminal'
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

eval_err_num:59
easy pred: select Document_ID from Paragraphs group by Document_ID having Document_ID between 'terminal'
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

hard pred: select Document_ID from Paragraphs where Document_ID like 'terminal'
hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'

hard pred: select Document_ID from Paragraphs where Document_ID like 'terminal'
hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'

easy pred: select count(*) from course
easy gold: SELECT count(*) FROM teacher

easy pred: select sum(*) from course
easy gold: SELECT count(*) FROM teacher

easy pred: select Name from teacher order by Name asc
easy gold: SELECT Name FROM teacher ORDER BY Age ASC

easy pred: select Age from teacher order by Age asc
easy gold: SELECT Name FROM teacher ORDER BY Age ASC

medium pred: select T2.Grade,T1.Age from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID
medium gold: SELECT Age ,  Hometown FROM teacher

medium pred: select T2.Grade,T1.Age from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID
medium gold: SELECT Age ,  Hometown FROM teacher

easy pred: select Name from teacher where Name not in 'terminal'
easy gold: SELECT Name FROM teacher WHERE Hometown != "Little Lever Urban Distric"

easy pred: select Name from teacher where Name != 'terminal'
easy gold: SELECT Name FROM teacher WHERE Hometown != "Little Lever Urban Distric"

medium pred: select Name from teacher where Name = 'terminal' and Name >= 'terminal'
medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33

medium pred: select Name from teacher where Name <= 'terminal' and Name >= 'terminal'
medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33

eval_err_num:60
medium pred: select a from b
medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1

eval_err_num:61
medium pred: select a from b
medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1

medium pred: select Hometown,* from teacher group by *,Hometown
medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown

medium pred: select count(Hometown),count(*) from teacher group by *,Hometown
medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown

hard pred: select Hometown from teacher group by Hometown order by Hometown desc limit 1
hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1

hard pred: select Hometown from teacher group by Hometown order by Hometown desc limit 1
hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1

easy pred: select Hometown from teacher group by Hometown having Hometown >= 'terminal'
easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2

easy pred: select Hometown from teacher group by Hometown having Hometown >= 'terminal'
easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2

medium pred: select *,Name from teacher
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

medium pred: select Age,Name from teacher
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

medium pred: select Age,Name from teacher order by Age asc,Name asc
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name

medium pred: select Age,Name from teacher order by Age asc,Name asc
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name

medium pred: select Name from teacher where Name = 'terminal'
medium gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

medium pred: select Name from teacher where Name = 'terminal'
medium gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

medium pred: select Name,count(*) from teacher group by *,Name
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

medium pred: select Name,* from teacher group by *,Name
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

medium pred: select Name from teacher group by Name having Name >= 'terminal'
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

medium pred: select Name from teacher group by Name having Name >= 'terminal'
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

hard pred: select Name from teacher where Name not in 'terminal'
hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)

hard pred: select Name from teacher
hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)

easy pred: select sum(*) from museum where * < 'terminal'
easy gold: SELECT count(*) FROM visitor WHERE age  <  30

medium pred: select Name from museum where Name > 'terminal' order by Name asc
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

easy pred: select avg(Age) from visitor where Age > 'terminal'
easy gold: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4

medium pred: select T3.Name,T1.Name from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID where T3.Name > 'terminal' or T1.Name > 'terminal' order by T3.Name asc,T1.Name asc
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

medium pred: select T2.Museum_ID,T1.Museum_ID from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID group by T1.Museum_ID,T2.Museum_ID order by T2.Museum_ID desc,T1.Museum_ID desc limit 1
medium gold: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1

eval_err_num:62
easy pred: select a from b
easy gold: SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009

medium pred: select Open_Year,Num_of_Staff from museum where Open_Year = 'terminal' or Num_of_Staff = 'terminal'
medium gold: SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'

hard pred: select Name from museum where Name > 'terminal' group by Name having Name > 'terminal'
hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)

eval_err_num:63
medium pred: select T3.ID,T2.Museum_ID,T1.Museum_ID from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID group by T1.Museum_ID,T2.Museum_ID,T3.ID having T3.ID > 'terminal',T2.Museum_ID > 'terminal',T1.Museum_ID > 'terminal'
medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

extra pred: select sum(T2.Total_spent),T3.Name,T1.Name from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID group by T1.Name,T3.Name,T2.Total_spent order by sum(T2.Total_spent) desc,T3.Name desc,T1.Name desc limit 1
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

extra pred: select T2.Museum_ID,T1.Museum_ID from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID group by T1.Museum_ID,T2.Museum_ID order by T2.Museum_ID desc,T1.Museum_ID desc limit 1
extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1

eval_err_num:64
hard pred: select a from b
hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

eval_err_num:65
hard pred: select a from b
hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

medium pred: select max(Total_spent),avg(Total_spent) from visit
medium gold: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit

medium pred: select sum(Level_of_membership) from visitor where Level_of_membership = 'terminal'
medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

extra pred: select Name from museum where Name > 'terminal' intersect select Name from museum where Name > 'terminal'
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011

eval_err_num:66
extra pred: select a from b
extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)

medium pred: select count(*) from museum where * < 'terminal' and * > 'terminal'
medium gold: SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008

easy pred: select sum(*) from players
easy gold: SELECT count(*) FROM players

easy pred: select sum(*) from players
easy gold: SELECT count(*) FROM matches

easy pred: select count(*) from players
easy gold: SELECT count(*) FROM matches

eval_err_num:67
medium pred: select a from b
medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'

medium pred: select first_name,birth_date from players
medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'

easy pred: select avg(loser_rank) from matches
easy gold: SELECT avg(winner_rank) FROM matches

easy pred: select avg(winner_rank_points) from matches
easy gold: SELECT avg(winner_rank) FROM matches

easy pred: select sum(loser_rank) from matches
easy gold: SELECT min(loser_rank) FROM matches

easy pred: select count(loser_ioc) from matches
easy gold: SELECT count(DISTINCT country_code) FROM players

easy pred: select tourney_name from matches group by tourney_name having tourney_name > 'terminal'
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10

easy pred: select tourney_name from matches group by tourney_name having tourney_name > 'terminal'
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10

hard pred: select first_name from players where first_name = 'terminal' intersect select first_name from players where first_name = 'terminal'
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

hard pred: select first_name from players where first_name = 'terminal' intersect select first_name from players where first_name = 'terminal'
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

medium pred: select count(match_num) from matches where match_num <= 'terminal' and match_num >= 'terminal'
medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016

medium pred: select count(*) from players where * >= 'terminal' and * <= 'terminal'
medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016

extra pred: select T1.last_name,T2.tourney_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.last_name = 'terminal' or T2.tourney_name = 'terminal' intersect select T1.last_name,T2.tourney_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.last_name = 'terminal' or T2.tourney_name = 'terminal'
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

extra pred: select last_name,first_name from players where last_name = 'terminal' or first_name = 'terminal' intersect select last_name,first_name from players where last_name = 'terminal' or first_name = 'terminal'
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

medium pred: select last_name,first_name from players order by last_name asc,first_name asc limit 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

medium pred: select last_name,first_name from players order by last_name asc,first_name asc limit 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

medium pred: select first_name,last_name from players order by first_name asc,last_name asc
medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date

medium pred: select last_name,first_name from players order by last_name asc,first_name asc
medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date

medium pred: select first_name,last_name from players where first_name = 'terminal' or last_name = 'terminal' order by first_name asc,last_name asc
medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date

medium pred: select last_name,first_name from players order by last_name asc,first_name asc
medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date

hard pred: select player_id,first_name from players group by first_name,player_id order by player_id desc,first_name desc limit 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

hard pred: select country_code,first_name from players group by first_name,country_code order by country_code desc,first_name desc limit 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

hard pred: select year from matches group by year order by year desc limit 1
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

hard pred: select year from matches group by year order by year asc limit 1
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

hard pred: select score,loser_name from matches group by loser_name,score order by score desc,loser_name desc limit 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

hard pred: select draw_size,loser_rank_points from matches order by draw_size desc,loser_rank_points desc limit 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

hard pred: select T1.last_name,T2.loser_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.last_name = 'terminal' or T2.loser_name = 'terminal' order by T1.last_name desc,T2.loser_name desc limit 1 intersect select T1.last_name,T2.loser_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.last_name = 'terminal' or T2.loser_name = 'terminal' order by T1.last_name desc,T2.loser_name desc limit 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

hard pred: select tourney_name from matches where tourney_name = 'terminal' group by tourney_name order by tourney_name desc limit 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

medium pred: select T1.last_name,T2.loser_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T1.last_name desc,T2.loser_name desc limit 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

medium pred: select draw_size from matches order by draw_size asc limit 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

medium pred: select T1.last_name,T2.loser_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id group by T2.loser_name,T1.last_name
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:68
medium pred: select a from b
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select T1.last_name,T2.loser_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id group by T2.loser_name,T1.last_name
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select first_name from players
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select country_code,count(*) from players group by *,country_code
medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code

medium pred: select count(loser_ioc),count(*) from matches group by *,loser_ioc
medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code

hard pred: select country_code from players group by country_code order by country_code desc limit 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1

hard pred: select country_code from players group by country_code order by country_code desc limit 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1

easy pred: select country_code from players group by country_code having country_code > 'terminal'
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50

easy pred: select country_code from players where country_code > 'terminal'
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50

medium pred: select sum(tourney_date),tourney_name from matches group by tourney_name,tourney_date
medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date

medium pred: select sum(T3.tours),count(T1.tourney_name) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T1.tourney_name,T3.tours
medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date

medium pred: select tourney_name,* from matches group by *,tourney_name
medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR

medium pred: select tourney_name,* from matches group by *,tourney_name
medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR

medium pred: select loser_name,tourney_name from matches order by loser_name asc,tourney_name asc limit 1
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

medium pred: select T2.winner_name,T1.first_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.winner_name asc,T1.first_name asc limit 1
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

medium pred: select count(*) from players where * = 'terminal'
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

medium pred: select count(*) from players where * = 'terminal'
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

hard pred: select T2.winner_name,T1.last_name,T1.birth_date from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.winner_name desc,T1.last_name desc,T1.birth_date desc limit 1
hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1

hard pred: select T1.last_name,T2.tourney_name,T2.tourney_date from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T1.last_name desc,T2.tourney_name desc,T2.tourney_date desc limit 1
hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1

medium pred: select loser_ioc,* from matches group by *,loser_ioc
medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand

medium pred: select loser_ioc,* from matches group by *,loser_ioc
medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand

easy pred: select sum(*) from battle where * != 'terminal'
easy gold: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'

medium pred: select T1.name,T2.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle order by T1.name desc,T2.name desc
medium gold: SELECT name ,  tonnage FROM ship ORDER BY name DESC

medium pred: select T3.note,T1.result,T1.date from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id
medium gold: SELECT name ,  date FROM battle

medium pred: select max(killed),min(killed),max(injured),min(injured) from death group by injured,killed
medium gold: SELECT max(killed) ,  min(killed) FROM death

easy pred: select avg(killed),avg(injured) from death group by injured,killed
easy gold: SELECT avg(injured) FROM death

medium pred: select T1.result,T2.ship_type from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T1.result = 'terminal' or T2.ship_type = 'terminal'
medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

medium pred: select T2.name,T1.result from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.name not in 'terminal' or T1.result != 'terminal'
medium gold: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'

medium pred: select T3.id,T1.id from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id where T3.id not in 'terminal' or T1.id not in 'terminal'
medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'

medium pred: select T1.id,T3.caused_by_ship_id from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id where T1.id > 'terminal' or T3.caused_by_ship_id > 'terminal'
medium gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

extra pred: select T3.id,T1.id from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id group by T1.id,T3.id order by T3.id desc,T1.id desc limit 1
extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1

medium pred: select name from ship where name = 'terminal' intersect select name from ship where name = 'terminal'
medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'

extra pred: select count(tonnage) from ship where tonnage not in 'terminal'
extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

extra pred: select T1.name,T2.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T1.name = 'terminal' or T2.name = 'terminal' intersect select T1.name,T2.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T1.name = 'terminal' or T2.name = 'terminal'
extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'

extra pred: select T3.killed,T1.latin_commander,T1.bulgarian_commander from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id where T3.killed != 'terminal' or T1.latin_commander != 'terminal' or T1.bulgarian_commander != 'terminal'
extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

medium pred: select result from battle where result like 'terminal'
medium gold: SELECT note FROM death WHERE note LIKE '%East%'

medium pred: select line_2 from Addresses where line_2 like 'terminal'
medium gold: SELECT line_1 ,  line_2 FROM addresses

medium pred: select line_3,line_2 from Addresses
medium gold: SELECT line_1 ,  line_2 FROM addresses

easy pred: select sum(*) from Addresses
easy gold: SELECT count(*) FROM Courses

easy pred: select count(*) from Addresses
easy gold: SELECT count(*) FROM Courses

easy pred: select course_description from Courses where course_description = 'terminal'
easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'

easy pred: select course_description from Courses
easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'

easy pred: select zip_postcode from Addresses where zip_postcode = 'terminal'
easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'

easy pred: select zip_postcode from Addresses where zip_postcode = 'terminal'
easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'

extra pred: select T4.ssn,T1.department_name from Departments as T1 join Degree_Programs as T2 on T1.department_id = T2.department_id join Student_Enrolment as T3 on T2.degree_program_id = T3.degree_program_id join Students as T4 on T3.student_id = T4.student_id group by T1.department_name,T4.ssn order by T4.ssn desc,T1.department_name desc limit 1
extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.department_id,T2.department_id from Departments as T1 join Degree_Programs as T2 on T1.department_id = T2.department_id group by T2.department_id,T1.department_id order by T1.department_id desc,T2.department_id desc limit 1
extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

easy pred: select count(department_name) from Departments
easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs

easy pred: select count(department_name) from Departments
easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs

easy pred: select count(course_name) from Courses
easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs

easy pred: select count(*) from Addresses
easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs

medium pred: select department_id from Degree_Programs group by department_id order by department_id desc limit 1
medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

medium pred: select department_id from Degree_Programs group by department_id
medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

medium pred: select T2.section_description,T1.course_description from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id
medium gold: SELECT section_name ,  section_description FROM Sections

medium pred: select T2.section_description,T1.course_description from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id
medium gold: SELECT section_name ,  section_description FROM Sections

eval_err_num:69
medium pred: select T2.section_name,T1.course_name from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id group by T1.course_name,T2.section_name having T2.section_name >= 'terminal',T1.course_name >= 'terminal'
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

eval_err_num:70
medium pred: select T4.first_name,T1.course_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Students as T4 on T3.student_id = T4.student_id group by T1.course_name,T4.first_name having T4.first_name < 'terminal',T1.course_name < 'terminal'
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

easy pred: select email_address from Students where email_address like 'terminal' order by email_address asc
easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC

easy pred: select section_name from Sections order by section_name asc
easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC

extra pred: select T1.student_enrolment_id,T2.student_enrolment_id from Student_Enrolment_Courses as T1 join Student_Enrolment as T2 on T1.student_enrolment_id = T2.student_enrolment_id group by T2.student_enrolment_id,T1.student_enrolment_id order by T1.student_enrolment_id desc,T2.student_enrolment_id desc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T3.first_name,T1.semester_name from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id group by T1.semester_name,T3.first_name order by T3.first_name desc,T1.semester_name desc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:71
medium pred: select a from b
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

medium pred: select department_name from Departments where department_name like 'terminal'
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

medium pred: select T2.student_enrolment_id,T1.student_enrolment_id,T3.first_name from Student_Enrolment_Courses as T1 join Student_Enrolment as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Students as T3 on T2.student_id = T3.student_id group by T3.first_name,T1.student_enrolment_id,T2.student_enrolment_id order by T2.student_enrolment_id asc,T1.student_enrolment_id asc,T3.first_name asc limit 1 having T2.student_enrolment_id = 'terminal',T1.student_enrolment_id = 'terminal',T3.first_name = 'terminal'
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

eval_err_num:72
medium pred: select T1.semester_name,T2.student_id,T3.student_id from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id group by T3.student_id,T2.student_id,T1.semester_name having T1.semester_name = 'terminal',T2.student_id in 'terminal',T3.student_id in 'terminal'
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

medium pred: select T1.department_name,T4.ssn,T4.first_name from Departments as T1 join Degree_Programs as T2 on T1.department_id = T2.department_id join Student_Enrolment as T3 on T2.degree_program_id = T3.degree_program_id join Students as T4 on T3.student_id = T4.student_id where T1.department_name = 'terminal' or T4.ssn = 'terminal' or T4.first_name = 'terminal'
medium gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

medium pred: select T1.semester_name,T3.last_name,T3.first_name from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id where T1.semester_name = 'terminal' or T3.last_name = 'terminal' or T3.first_name = 'terminal'
medium gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

extra pred: select degree_program_id from Student_Enrolment group by degree_program_id order by degree_program_id desc limit 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

extra pred: select degree_summary_description from Degree_Programs group by degree_summary_description order by degree_summary_description desc limit 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.student_enrolment_id,T2.student_enrolment_id from Student_Enrolment_Courses as T1 join Student_Enrolment as T2 on T1.student_enrolment_id = T2.student_enrolment_id group by T2.student_enrolment_id,T1.student_enrolment_id order by T1.student_enrolment_id desc,T2.student_enrolment_id desc limit 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.department_description,T2.degree_summary_description from Departments as T1 join Degree_Programs as T2 on T1.department_id = T2.department_id group by T2.degree_summary_description,T1.department_description order by T1.department_description desc,T2.degree_summary_description desc limit 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T3.student_id,T2.student_id,T2.student_enrolment_id,T1.student_enrolment_id from Student_Enrolment_Courses as T1 join Student_Enrolment as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Students as T3 on T2.student_id = T3.student_id group by T1.student_enrolment_id,T2.student_enrolment_id,T2.student_id,T3.student_id order by T3.student_id asc,T2.student_id asc,T2.student_enrolment_id asc,T1.student_enrolment_id asc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.student_enrolment_id,T4.last_name,T4.first_name,T3.semester_name from Student_Enrolment_Courses as T1 join Student_Enrolment as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Semesters as T3 on T2.semester_id = T3.semester_id join Students as T4 on T2.student_id = T4.student_id group by T3.semester_name,T4.first_name,T4.last_name,T1.student_enrolment_id order by T1.student_enrolment_id desc,T4.last_name desc,T4.first_name desc,T3.semester_name desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

hard pred: select semester_name from Semesters where semester_name not in 'terminal'
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

hard pred: select first_name from Students where first_name not in 'terminal'
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

easy pred: select course_name from Courses
easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id

easy pred: select course_name from Courses
easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id

extra pred: select course_name from Courses group by course_name order by course_name desc limit 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

extra pred: select course_name from Courses group by course_name order by course_name asc limit 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

extra pred: select last_name from Students where last_name = 'terminal' except select last_name from Students where last_name = 'terminal'
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

extra pred: select last_name from Students where last_name not in 'terminal' except select last_name from Students where last_name not in 'terminal'
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

eval_err_num:73
medium pred: select T1.transcript_id,T2.transcript_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id group by T2.transcript_id,T1.transcript_id having T1.transcript_id >= 'terminal',T2.transcript_id >= 'terminal'
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

eval_err_num:74
medium pred: select T1.transcript_id,T2.transcript_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id group by T2.transcript_id,T1.transcript_id having T1.transcript_id >= 'terminal',T2.transcript_id >= 'terminal'
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

medium pred: select last_name,first_name from Students where last_name = 'terminal' or first_name = 'terminal'
medium gold: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'

medium pred: select cell_mobile_number from Students where cell_mobile_number = 'terminal'
medium gold: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'

medium pred: select first_name,date_first_registered,date_left from Students order by first_name asc,date_first_registered asc,date_left asc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

medium pred: select date_first_registered,last_name,first_name from Students
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

medium pred: select date_first_registered,date_left,first_name from Students order by date_first_registered asc,date_left asc,first_name asc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

medium pred: select middle_name,last_name,first_name from Students order by middle_name asc,last_name asc,first_name asc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

easy pred: select email_address from Students where email_address >= 'terminal'
easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id

easy pred: select first_name from Students where first_name = 'terminal'
easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id

extra pred: select permanent_address_id,email_address from Students group by email_address,permanent_address_id order by permanent_address_id desc,email_address desc limit 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T2.permanent_address_id,T2.current_address_id,T1.address_id from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id group by T1.address_id,T2.current_address_id,T2.permanent_address_id order by T2.permanent_address_id asc,T2.current_address_id asc,T1.address_id asc limit 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

easy pred: select avg(student_enrolment_id) from Student_Enrolment_Courses
easy gold: SELECT avg(transcript_date) FROM Transcripts

eval_err_num:75
medium pred: select a from b
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

medium pred: select date_first_registered,date_left from Students
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

easy pred: select count(*) from Addresses
easy gold: SELECT count(*) FROM Transcripts

easy pred: select count(*) from Addresses
easy gold: SELECT count(*) FROM Transcripts

medium pred: select date_first_registered from Students
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

eval_err_num:76
medium pred: select a from b
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

eval_err_num:77
hard pred: select a from b
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

hard pred: select ssn,* from Students group by *,ssn
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

extra pred: select * from Addresses group by * order by * asc limit 1
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

extra pred: select T1.transcript_id,T2.transcript_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id group by T2.transcript_id,T1.transcript_id order by T1.transcript_id asc,T2.transcript_id asc limit 1
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

extra pred: select student_enrolment_id from Student_Enrolment_Courses where student_enrolment_id = 'terminal' intersect select student_enrolment_id from Student_Enrolment_Courses where student_enrolment_id = 'terminal'
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

extra pred: select semester_id from Semesters where semester_id in 'terminal' intersect select semester_id from Semesters where semester_id in 'terminal'
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

easy pred: select count(address_id) from Addresses
easy gold: SELECT count(DISTINCT current_address_id) FROM Students

easy pred: select email_address from Students
easy gold: SELECT count(DISTINCT current_address_id) FROM Students

easy pred: select * from Addresses order by * asc
easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC

easy pred: select * from Addresses order by * asc
easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC

easy pred: select zip_postcode from Addresses order by zip_postcode asc limit 1
easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'

easy pred: select section_description from Sections where section_description = 'terminal'
easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'

extra pred: select first_name from Students where first_name = 'terminal'
extra gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'

extra pred: select first_name from Students where first_name = 'terminal'
extra gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'

easy pred: select Written_by from Cartoon where Written_by = 'terminal'
easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";

easy pred: select series_name from TV_Channel where series_name = 'terminal'
easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";

easy pred: select count(*) from TV_Channel where * = 'terminal'
easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";

easy pred: select count(*) from TV_Channel where * = 'terminal'
easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";

medium pred: select T1.Episode,T3.Title from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel order by T1.Episode asc,T3.Title asc
medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date

medium pred: select Directed_by,Written_by from Cartoon order by Directed_by asc,Written_by asc
medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date

medium pred: select Title from Cartoon where Title <= 'terminal' and Title = 'terminal'
medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";

medium pred: select Title from Cartoon where Title >= 'terminal' and Title <= 'terminal'
medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";

hard pred: select *,Country from TV_Channel where * = 'terminal' or Country = 'terminal' group by Country,* order by * desc,Country desc limit 1
hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;

hard pred: select Country,* from TV_Channel group by *,Country order by Country desc,* desc limit 1
hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;

medium pred: select count(T2.Rating),count(T1.series_name) from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T2.Rating like 'terminal' or T1.series_name like 'terminal'
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;

medium pred: select count(*),count(Episode) from TV_series where * = 'terminal' or Episode = 'terminal'
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;

easy pred: select Content from TV_Channel where Content = 'terminal'
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";

easy pred: select Content from TV_Channel where Content = 'terminal'
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";

easy pred: select * from TV_Channel where * = 'terminal'
easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";

easy pred: select id from Cartoon where id like 'terminal'
easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";

easy pred: select count(id) from Cartoon where id = 'terminal'
easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";

eval_err_num:78
easy pred: select a from b
easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";

hard pred: select Language,* from TV_Channel group by *,Language order by Language asc,* asc limit 1
hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;

hard pred: select Content,* from TV_Channel order by Content asc,* asc limit 1
hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;

medium pred: select Episode,count(*) from TV_series group by *,Episode
medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE

medium pred: select Episode,* from TV_series group by *,Episode
medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE

medium pred: select Title from Cartoon where Title = 'terminal'
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";

medium pred: select Episode from TV_series where Episode = 'terminal'
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";

medium pred: select Title from Cartoon where Title = 'terminal'
medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

medium pred: select Title from Cartoon where Title = 'terminal'
medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

easy pred: select * from TV_Channel order by * asc
easy gold: SELECT Episode FROM TV_series ORDER BY rating

easy pred: select Episode from TV_series order by Episode asc
easy gold: SELECT Episode FROM TV_series ORDER BY rating

medium pred: select T1.id,T3.id from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel order by T1.id asc,T3.id asc limit 1
medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;

medium pred: select Rating,Episode from TV_series group by Episode,Rating order by Rating asc,Episode asc limit 1
medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;

medium pred: select max(18_49_Rating_Share),min(18_49_Rating_Share) from TV_series
medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;

easy pred: select Air_Date from TV_series where Air_Date = 'terminal'
easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";

easy pred: select Pixel_aspect_ratio_PAR from TV_Channel where Pixel_aspect_ratio_PAR = 'terminal'
easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";

easy pred: select Title from Cartoon where Title = 'terminal'
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";

easy pred: select Pixel_aspect_ratio_PAR from TV_Channel where Pixel_aspect_ratio_PAR = 'terminal'
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";

medium pred: select Title from Cartoon where Title = 'terminal'
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";

medium pred: select Title from Cartoon where Title = 'terminal'
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";

medium pred: select Title from Cartoon where Title = 'terminal'
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

medium pred: select Episode from TV_series where Episode = 'terminal'
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

medium pred: select count(Content),count(*) from TV_Channel group by *,Content
medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by

medium pred: select count(Content),count(*) from TV_Channel group by *,Content
medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by

medium pred: select T1.Content,count(T2.Episode) from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel order by T1.Content asc,count(T2.Episode) asc limit 1
medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1

medium pred: select T1.Language,count(T2.Episode) from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel order by T1.Language desc,count(T2.Episode) desc limit 1
medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1

medium pred: select T2.Channel,T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Channel = 'terminal' or T1.series_name = 'terminal'
medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"

medium pred: select Pay_per_view_PPV,series_name from TV_Channel where Pay_per_view_PPV = 'terminal' or series_name = 'terminal'
medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"

medium pred: select Language from TV_Channel where Language not in 'terminal'
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

medium pred: select Country from TV_Channel where Country != 'terminal' except select Country from TV_Channel where Country != 'terminal'
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

hard pred: select Country from TV_Channel where Country not in 'terminal' except select Country from TV_Channel where Country not in 'terminal'
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

hard pred: select Country from TV_Channel where Country != 'terminal' except select Country from TV_Channel where Country != 'terminal'
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

extra pred: select sum(T2.Directed_by),T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by != 'terminal' or T1.series_name not in 'terminal'
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

extra pred: select T1.Language,T2.Episode from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.Language >= 'terminal' or T2.Episode > 'terminal' intersect select T1.Language,T2.Episode from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.Language >= 'terminal' or T2.Episode > 'terminal'
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

eval_err_num:79
medium pred: select a from b
medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'

medium pred: select count(Hight_definition_TV),count(Country),sum(Pixel_aspect_ratio_PAR) from TV_Channel where Hight_definition_TV != 'terminal' or Country != 'terminal' or Pixel_aspect_ratio_PAR != 'terminal'
medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'

easy pred: select Channel from Cartoon group by Channel having Channel > 'terminal'
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

easy pred: select id from Cartoon group by id having id > 'terminal'
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

eval_err_num:80
hard pred: select a from b
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

eval_err_num:81
hard pred: select a from b
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

eval_err_num:82
hard pred: select a from b
hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')

eval_err_num:83
hard pred: select a from b
hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')

medium pred: select Final_Table_Made,Best_Finish from poker_player order by Final_Table_Made desc,Best_Finish desc limit 1
medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player

medium pred: select Final_Table_Made,Best_Finish from poker_player where Final_Table_Made = 'terminal' or Best_Finish = 'terminal'
medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player

medium pred: select Money_Rank from poker_player order by Money_Rank desc limit 1
medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1

eval_err_num:84
medium pred: select a from b
medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1

easy pred: select max(Earnings) from poker_player where Earnings < 'terminal'
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

easy pred: select max(Height) from people where Height > 'terminal'
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

easy pred: select Name from people
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

easy pred: select Name from people
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

medium pred: select Name from people where Name > 'terminal'
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000

medium pred: select Name from people where Name > 'terminal'
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000

medium pred: select Name from people order by Name asc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made

medium pred: select Name from people order by Name asc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made

hard pred: select Birth_Date from people order by Birth_Date asc limit 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

hard pred: select Birth_Date from people order by Birth_Date asc limit 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

hard pred: select Height from people order by Height desc limit 1
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

hard pred: select Height from people order by Height desc limit 1
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

medium pred: select avg(Height) from people where Height > 'terminal'
medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

medium pred: select avg(Height) from people where Height > 'terminal'
medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

medium pred: select Name from people order by Name desc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC

medium pred: select Name from people order by Name desc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC

medium pred: select Nationality,count(*) from people group by *,Nationality
medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality

medium pred: select Nationality,sum(*) from people group by *,Nationality
medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality

hard pred: select Nationality from people group by Nationality order by Nationality desc limit 1
hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1

hard pred: select Nationality from people group by Nationality order by Nationality desc limit 1
hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1

easy pred: select Nationality from people group by Nationality having Nationality >= 'terminal'
easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2

easy pred: select Nationality from people group by Nationality having Nationality >= 'terminal'
easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2

medium pred: select Name,Birth_Date from people order by Name asc,Birth_Date asc
medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC

medium pred: select Name,Birth_Date from people order by Name asc,Birth_Date asc
medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC

easy pred: select Name from people where Name not in 'terminal'
easy gold: SELECT Name FROM people WHERE Nationality != "Russia"

easy pred: select Name from people where Name not in 'terminal'
easy gold: SELECT Name FROM people WHERE Nationality != "Russia"

eval_err_num:85
hard pred: select a from b
hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

hard pred: select Name from people where Name not in 'terminal' except select Name from people where Name not in 'terminal'
hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

medium pred: select T2.phone_number,T1.contestant_name from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number order by T2.phone_number desc,T1.contestant_name desc
medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC

medium pred: select T2.contestant_number,T1.contestant_number,T2.phone_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number
medium gold: SELECT vote_id ,  phone_number ,  state FROM votes

easy pred: select created from VOTES where created = 'terminal'
easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'

easy pred: select contestant_name from CONTESTANTS where contestant_name not in 'terminal'
easy gold: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'

medium pred: select T2.state,T1.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state
medium gold: SELECT DISTINCT state ,  created FROM votes

eval_err_num:86
medium pred: select *,contestant_name from CONTESTANTS group by contestant_name,* having * >= 'terminal',contestant_name >= 'terminal'
medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

extra pred: select *,contestant_name from CONTESTANTS order by * asc,contestant_name asc limit 1
extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

medium pred: select count(*) from AREA_CODE_STATE where * = 'terminal' and * <= 'terminal'
medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'

extra pred: select count(*) from AREA_CODE_STATE where * != 'terminal'
extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

extra pred: select area_code from AREA_CODE_STATE order by area_code desc limit 1
extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1

medium pred: select T2.contestant_number,T1.contestant_number,T2.phone_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number where T2.contestant_number = 'terminal' or T1.contestant_number = 'terminal' or T2.phone_number = 'terminal'
medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

extra pred: select area_code from AREA_CODE_STATE where area_code = 'terminal' intersect select area_code from AREA_CODE_STATE where area_code = 'terminal'
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

easy pred: select Name from city where Name > 'terminal'
easy gold: SELECT Name FROM country WHERE IndepYear  >  1950

eval_err_num:87
easy pred: select a from b
easy gold: SELECT Name FROM country WHERE IndepYear  >  1950

easy pred: select count(CountryCode) from countrylanguage where CountryCode in 'terminal'
easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"

eval_err_num:88
easy pred: select a from b
easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"

easy pred: select sum(SurfaceArea) from country
easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"

easy pred: select sum(SurfaceArea) from country where SurfaceArea > 'terminal'
easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"

easy pred: select CountryCode from countrylanguage where CountryCode = 'terminal'
easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"

easy pred: select Name from city where Name = 'terminal'
easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"

medium pred: select Region from country where Region = 'terminal'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

medium pred: select CountryCode from countrylanguage where CountryCode = 'terminal'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

eval_err_num:89
extra pred: select a from b
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

extra pred: select Language from countrylanguage where Language = 'terminal'
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

eval_err_num:90
medium pred: select a from b
medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"

medium pred: select Percentage from countrylanguage
medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"

medium pred: select T2.Population,T1.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code
medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"

medium pred: select T1.Population,T2.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.Population = 'terminal' or T2.Population = 'terminal'
medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"

eval_err_num:91
easy pred: select a from b
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

eval_err_num:92
easy pred: select a from b
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

hard pred: select Name from city order by Name asc limit 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1

hard pred: select Name from city order by Name asc limit 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1

medium pred: select sum(Population),max(Population) from city where Population = 'terminal'
medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"

eval_err_num:93
medium pred: select a from b
medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"

medium pred: select avg(Percentage) from countrylanguage
medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

eval_err_num:94
medium pred: select a from b
medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

medium pred: select sum(SurfaceArea) from country
medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

medium pred: select sum(SurfaceArea) from country where SurfaceArea >= 'terminal' and SurfaceArea <= 'terminal'
medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

easy pred: select count(Code2) from country where Code2 = 'terminal'
easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"

easy pred: select sum(Population) from country where Population = 'terminal'
easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"

eval_err_num:95
medium pred: select a from b
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

eval_err_num:96
medium pred: select a from b
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

easy pred: select count(GovernmentForm) from country
easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage

easy pred: select count(*) from city where * = 'terminal'
easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"

easy pred: select count(GovernmentForm) from country where GovernmentForm != 'terminal'
easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"

medium pred: select sum(*) from city where * = 'terminal'
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

medium pred: select count(CountryCode) from countrylanguage where CountryCode = 'terminal'
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

medium pred: select count(Code2) from country where Code2 not in 'terminal'
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

medium pred: select count(Code2) from country where Code2 = 'terminal'
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

extra pred: select CountryCode from countrylanguage group by CountryCode order by CountryCode desc limit 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

extra pred: select Name from city group by Name order by Name desc limit 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

extra pred: select CountryCode from countrylanguage group by CountryCode order by CountryCode desc limit 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

extra pred: select CountryCode from countrylanguage group by CountryCode order by CountryCode desc limit 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

easy pred: select count(*) from city where * = 'terminal'
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

easy pred: select count(*) from city where * = 'terminal'
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

extra pred: select Name from city where Name = 'terminal' intersect select Name from city where Name = 'terminal'
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

extra pred: select Name from country where Name = 'terminal' intersect select Name from country where Name = 'terminal'
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

extra pred: select Name from city where Name = 'terminal' intersect select Name from city where Name = 'terminal'
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

extra pred: select T2.name,T1.Name from city as T1 join sqlite_sequence as T2 where T2.name = 'terminal' or T1.Name = 'terminal' intersect select T2.name,T1.Name from city as T1 join sqlite_sequence as T2 where T2.name = 'terminal' or T1.Name = 'terminal'
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

medium pred: select count(Continent) from country
medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

medium pred: select count(*) from city where * not in 'terminal'
medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

hard pred: select CountryCode from countrylanguage where CountryCode >= 'terminal' and CountryCode <= 'terminal'
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

hard pred: select CountryCode from countrylanguage where CountryCode >= 'terminal' and CountryCode <= 'terminal'
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

extra pred: select CountryCode from countrylanguage where CountryCode = 'terminal' union select CountryCode from countrylanguage where CountryCode = 'terminal'
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

extra pred: select CountryCode from countrylanguage where CountryCode = 'terminal' and CountryCode >= 'terminal' union select CountryCode from countrylanguage where CountryCode = 'terminal' and CountryCode >= 'terminal'
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

extra pred: select Continent from country group by Continent order by Continent desc limit 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

eval_err_num:97
extra pred: select a from b
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

hard pred: select CountryCode from countrylanguage
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

hard pred: select CountryCode from countrylanguage where CountryCode in 'terminal'
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

eval_err_num:98
extra pred: select a from b
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

eval_err_num:99
extra pred: select a from b
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

hard pred: select T1.Population,T2.Population,T3.CountryCode from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode order by T1.Population desc,T2.Population desc,T3.CountryCode desc limit 1
hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1

hard pred: select T2.name,T1.Name,T4.CountryCode from city as T1 join sqlite_sequence as T2 join country as T3 on T1.CountryCode = T3.Code join countrylanguage as T4 on T3.Code = T4.CountryCode order by T2.name desc,T1.Name desc,T4.CountryCode desc limit 1
hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:100
extra pred: select a from b
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

eval_err_num:101
extra pred: select a from b
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

eval_err_num:102
extra pred: select a from b
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

extra pred: select sum(*) from city where * not in 'terminal'
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

medium pred: select Language from countrylanguage where Language = 'terminal'
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

medium pred: select Language from countrylanguage where Language = 'terminal'
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

eval_err_num:103
medium pred: select a from b
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

medium pred: select count(Code2) from country group by Code2
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

eval_err_num:104
hard pred: select a from b
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

eval_err_num:105
hard pred: select a from b
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

eval_err_num:106
extra pred: select a from b
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")

eval_err_num:107
extra pred: select a from b
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")

eval_err_num:108
extra pred: select a from b
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")

eval_err_num:109
extra pred: select a from b
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")

hard pred: select CountryCode from city where CountryCode not in 'terminal'
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

hard pred: select CountryCode from city where CountryCode not in 'terminal'
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

eval_err_num:110
easy pred: select a from b
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"

easy pred: select CountryCode from countrylanguage where CountryCode not in 'terminal'
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"

hard pred: select CountryCode from city where CountryCode not in 'terminal' except select CountryCode from city where CountryCode not in 'terminal'
hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

hard pred: select CountryCode from city where CountryCode not in 'terminal' except select CountryCode from city where CountryCode not in 'terminal'
hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

eval_err_num:111
extra pred: select a from b
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

eval_err_num:112
extra pred: select a from b
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

eval_err_num:113
medium pred: select a from b
medium gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

medium pred: select Name from city where Name = 'terminal'
medium gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

medium pred: select T2.Name,T1.District,T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T2.Name asc,T1.District asc,T2.Continent asc limit 1
medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1

medium pred: select T1.Name,T2.name,T3.Name from city as T1 join sqlite_sequence as T2 join country as T3 on T1.CountryCode = T3.Code order by T1.Name asc,T2.name asc,T3.Name asc limit 1
medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1

medium pred: select T1.Region,T2.CountryCode,T1.Continent from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode order by T1.Region desc,T2.CountryCode desc,T1.Continent desc limit 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select T1.Name,T2.Name,T1.District from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.Name desc,T2.Name desc,T1.District desc limit 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:114
medium pred: select *,CountryCode from countrylanguage group by CountryCode,* having * >= 'terminal',CountryCode >= 'terminal'
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

eval_err_num:115
medium pred: select Code2,sum(*) from country group by *,Code2 having Code2 > 'terminal',sum(*) > 'terminal'
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

extra pred: select avg(T1.Population),avg(T2.CountryCode) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode group by T2.CountryCode,T1.Population
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

eval_err_num:116
extra pred: select a from b
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

medium pred: select sum(T1.Population),sum(T2.Population) from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Population,T1.Population
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

medium pred: select sum(T1.Population),sum(T2.Percentage) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode group by T2.Percentage,T1.Population
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

medium pred: select avg(T1.Population),avg(T2.Population) from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Population,T1.Population
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

eval_err_num:117
medium pred: select avg(T1.Population),avg(T2.Population) from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Population,T1.Population having avg(T1.Population) > 'terminal',avg(T2.Population) > 'terminal'
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

medium pred: select T2.name,T1.Name from city as T1 join sqlite_sequence as T2 order by T2.name desc,T1.Name desc limit 1
medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

medium pred: select T2.name,T1.Name from city as T1 join sqlite_sequence as T2 order by T2.name desc,T1.Name desc limit 1
medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

medium pred: select Name from city order by Name desc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

medium pred: select Name from city group by Name order by Name desc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

medium pred: select Population from country order by Population asc limit 1
medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3

medium pred: select Name from country group by Name order by Name asc limit 1
medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3

easy pred: select count(*) from city where * = 'terminal'
easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"

easy pred: select count(*) from city where * = 'terminal'
easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"

medium pred: select Population from city where Population != 'terminal'
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

medium pred: select Name from city where Name between 'terminal' and 'terminal'
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

eval_err_num:118
hard pred: select a from b
hard gold: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

hard pred: select sum(T1.Population),avg(T1.Population),sum(T2.Percentage),avg(T2.Percentage) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Population > 'terminal' or T2.Percentage > 'terminal'
hard gold: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

easy pred: select CountryCode from countrylanguage where CountryCode between 'terminal' and 'terminal'
easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000

easy pred: select Name from country where Name between 'terminal' and 'terminal'
easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 90000

hard pred: select Language from countrylanguage group by Language order by Language desc limit 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

hard pred: select Language from countrylanguage group by Language order by Language desc limit 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

medium pred: select CountryCode,Language from countrylanguage group by Language,CountryCode order by CountryCode desc,Language desc limit 1
medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode

medium pred: select T1.Continent,T2.CountryCode from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode group by T2.CountryCode,T1.Continent order by T1.Continent desc,T2.CountryCode desc limit 1
medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode

extra pred: select sum(*) from city order by sum(*) desc limit 1
extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

eval_err_num:119
extra pred: select a from b
extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

medium pred: select CountryCode from city order by CountryCode desc limit 1
medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

eval_err_num:120
medium pred: select a from b
medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

easy pred: select Name from conductor order by Name asc
easy gold: SELECT Name FROM conductor ORDER BY Age ASC

easy pred: select Name from conductor order by Name asc
easy gold: SELECT Name FROM conductor ORDER BY Age ASC

easy pred: select Name from conductor where Name not in 'terminal'
easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'

easy pred: select Name from conductor where Name not in 'terminal'
easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'

easy pred: select Attendance from show order by Attendance asc
easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

easy pred: select Attendance from show order by Attendance desc
easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

medium pred: select max(Attendance),min(Attendance) from show where Attendance != 'terminal'
medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"

medium pred: select max(Attendance),min(Attendance) from show where Attendance not in 'terminal'
medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"

easy pred: select Name from conductor order by Name desc
easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC

easy pred: select Name from conductor order by Name asc
easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC

medium pred: select Name from conductor group by Name order by Name desc limit 1
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1

medium pred: select Name from conductor order by Name desc limit 1
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1

medium pred: select Name from conductor where Name not in 'terminal'
medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID

eval_err_num:121
medium pred: select a from b
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1

medium pred: select Name from conductor group by Name having Name > 'terminal'
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1

extra pred: select Name from conductor group by Name order by Name desc limit 1
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

extra pred: select Name from conductor group by Name order by Name desc limit 1
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

medium pred: select Name from conductor where Name > 'terminal'
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008

medium pred: select Name from conductor where Name > 'terminal'
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008

medium pred: select Record_Company,count(*) from orchestra group by *,Record_Company
medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company

medium pred: select Orchestra,count(*) from orchestra group by *,Orchestra
medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company

medium pred: select Major_Record_Format from orchestra order by Major_Record_Format asc
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

medium pred: select * from conductor group by * order by * asc
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

hard pred: select Record_Company from orchestra group by Record_Company order by Record_Company desc limit 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1

hard pred: select Record_Company from orchestra group by Record_Company order by Record_Company desc limit 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1

hard pred: select Name from conductor where Name not in 'terminal'
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

eval_err_num:122
hard pred: select a from b
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

hard pred: select * from conductor where * > 'terminal' and * < 'terminal' intersect select * from conductor where * > 'terminal' and * < 'terminal'
hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

hard pred: select Record_Company from orchestra where Record_Company > 'terminal' and Record_Company < 'terminal' intersect select Record_Company from orchestra where Record_Company > 'terminal' and Record_Company < 'terminal'
hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

medium pred: select count(*) from conductor where * <= 'terminal' and * = 'terminal'
medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

medium pred: select count(*) from conductor where * >= 'terminal'
medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

eval_err_num:123
medium pred: select a from b
medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1

eval_err_num:124
medium pred: select a from b
medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1

medium pred: select grade,name from Highschooler where grade = 'terminal' or name = 'terminal'
medium gold: SELECT name ,  grade FROM Highschooler

medium pred: select grade,name from Highschooler where grade = 'terminal' or name not in 'terminal'
medium gold: SELECT name ,  grade FROM Highschooler

easy pred: select grade from Highschooler where grade = 'terminal'
easy gold: SELECT grade FROM Highschooler

easy pred: select *,grade from Highschooler where * = 'terminal' or grade = 'terminal'
easy gold: SELECT grade FROM Highschooler

easy pred: select grade from Highschooler where grade = 'terminal'
easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"

easy pred: select grade from Highschooler where grade = 'terminal'
easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"

easy pred: select grade from Highschooler where grade = 'terminal'
easy gold: SELECT name FROM Highschooler WHERE grade  =  10

easy pred: select grade from Highschooler where grade = 'terminal'
easy gold: SELECT name FROM Highschooler WHERE grade  =  10

easy pred: select grade from Highschooler where grade = 'terminal'
easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"

easy pred: select ID from Highschooler where ID = 'terminal'
easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"

medium pred: select grade from Highschooler where grade not in 'terminal'
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10

medium pred: select * from Highschooler where * not in 'terminal'
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10

medium pred: select grade,* from Highschooler group by *,grade
medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade

medium pred: select grade,* from Highschooler group by *,grade
medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade

hard pred: select grade from Highschooler group by grade order by grade desc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1

hard pred: select grade from Highschooler group by grade order by grade desc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1

easy pred: select grade from Highschooler group by grade having grade >= 'terminal'
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4

easy pred: select grade from Highschooler where grade >= 'terminal'
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4

medium pred: select friend_id,count(*) from Friend group by *,friend_id
medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id

medium pred: select name,* from Highschooler group by *,name
medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id

medium pred: select name,* from Highschooler group by *,name
medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

medium pred: select *,name from Highschooler group by name,*
medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

extra pred: select name from Highschooler group by name order by name desc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

extra pred: select name from Highschooler order by name desc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

medium pred: select name from Highschooler group by name having name >= 'terminal'
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3

medium pred: select name from Highschooler group by name having name >= 'terminal'
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3

medium pred: select name from Highschooler where name = 'terminal'
medium gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

medium pred: select name from Highschooler where name = 'terminal'
medium gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

medium pred: select count(*) from Highschooler where * = 'terminal'
medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

medium pred: select count(*) from Highschooler where * = 'terminal'
medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:125
hard pred: select a from b
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

hard pred: select student_id from Friend where student_id not in 'terminal' except select student_id from Friend where student_id not in 'terminal'
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

eval_err_num:126
hard pred: select a from b
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

hard pred: select name from Highschooler where name not in 'terminal'
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

hard pred: select ID from Highschooler
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

hard pred: select student_id from Friend where student_id in 'terminal' intersect select student_id from Friend where student_id in 'terminal'
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

hard pred: select name from Highschooler
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

hard pred: select name from Highschooler where name in 'terminal' intersect select name from Highschooler where name in 'terminal'
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

medium pred: select student_id,* from Friend group by *,student_id
medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id

medium pred: select student_id,* from Friend group by *,student_id
medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id

medium pred: select *,name from Highschooler
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

medium pred: select name,* from Highschooler group by *,name
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

extra pred: select name from Highschooler order by name desc limit 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

extra pred: select name from Highschooler order by name desc limit 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

medium pred: select student_id from Friend group by student_id having student_id >= 'terminal'
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

medium pred: select student_id from Friend group by student_id having student_id >= 'terminal'
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

hard pred: select student_id from Friend where student_id not in 'terminal'
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

hard pred: select name from Highschooler group by name having name not in 'terminal'
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

medium pred: select count(liked_id) from Likes where liked_id not in 'terminal'
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

medium pred: select count(*) from Highschooler where * = 'terminal'
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

hard pred: select avg(grade) from Highschooler
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

hard pred: select avg(grade) from Highschooler
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

extra pred: select min(grade),max(grade) from Highschooler where grade not in 'terminal'
extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

eval_err_num:127
extra pred: select a from b
extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

hard pred: select state from Professionals intersect select state from Professionals
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

hard pred: select state from Owners intersect select state from Owners
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

eval_err_num:128
hard pred: select a from b
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

hard pred: select avg(age) from Dogs
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

eval_err_num:129
extra pred: select T2.name,T1.home_phone,T4.home_phone from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.home_phone,T1.home_phone,T2.name having T2.name > 'terminal',T1.home_phone > 'terminal',T4.home_phone > 'terminal'
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

extra pred: select T4.last_name,T4.home_phone,T1.home_phone from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.last_name > 'terminal' or T4.home_phone > 'terminal' or T1.home_phone > 'terminal'
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

hard pred: select name from Dogs where name > 'terminal'
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )

hard pred: select breed_name from Breeds where breed_name > 'terminal'
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )

eval_err_num:130
hard pred: select a from b
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

eval_err_num:131
hard pred: select a from b
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

eval_err_num:132
extra pred: select a from b
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:133
extra pred: select a from b
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

extra pred: select T4.last_name,T1.first_name,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.first_name,T1.first_name,T4.last_name order by T4.last_name desc,T1.first_name desc,T4.first_name desc limit 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.first_name,T4.last_name,T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.last_name,T4.last_name,T1.first_name order by T1.first_name desc,T4.last_name desc,T1.last_name desc limit 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:134
medium pred: select T4.city,T1.city,T2.name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T2.name,T1.city,T4.city having T4.city not in 'terminal',T1.city not in 'terminal',T2.name not in 'terminal'
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:135
medium pred: select T4.first_name,T1.owner_id,T2.owner_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T2.owner_id,T1.owner_id,T4.first_name having T4.first_name >= 'terminal',T1.owner_id >= 'terminal',T2.owner_id >= 'terminal'
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

extra pred: select breed_name from Breeds group by breed_name order by breed_name desc limit 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

extra pred: select breed_name from Breeds group by breed_name order by breed_name desc limit 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

extra pred: select T4.last_name,T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.last_name,T4.last_name order by T4.last_name desc,T1.last_name desc limit 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.last_name,T4.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.last_name,T1.last_name order by T1.last_name desc,T4.last_name desc limit 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

extra pred: select treatment_type_description from Treatment_Types order by treatment_type_description asc limit 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

extra pred: select treatment_type_description from Treatment_Types order by treatment_type_description asc limit 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

extra pred: select T1.last_name,T4.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.last_name,T1.last_name order by T1.last_name desc,T4.last_name desc limit 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

extra pred: select T1.owner_id,T2.owner_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id group by T2.owner_id,T1.owner_id order by T1.owner_id desc,T2.owner_id desc limit 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

eval_err_num:136
medium pred: select T1.owner_id,T2.owner_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id group by T2.owner_id,T1.owner_id having T1.owner_id not in 'terminal',T2.owner_id not in 'terminal'
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:137
medium pred: select T4.home_phone,T1.home_phone from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.home_phone,T4.home_phone having T4.home_phone >= 'terminal',T1.home_phone >= 'terminal'
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:138
extra pred: select a from b
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

eval_err_num:139
extra pred: select a from b
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

medium pred: select T1.first_name,T2.date_of_birth from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id order by T1.first_name asc,T2.date_of_birth asc limit 1
medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id

medium pred: select T2.date_of_treatment,T1.date_of_birth from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id order by T2.date_of_treatment asc,T1.date_of_birth asc limit 1
medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id

medium pred: select T1.charge_type,T2.treatment_type_description from Charges as T1 join Treatment_Types as T2
medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code

medium pred: select T2.name,T1.first_name,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

medium pred: select T2.name,T4.first_name,T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id order by T2.name asc,T4.first_name asc,T1.first_name asc limit 1
medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

medium pred: select T1.first_name,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

medium pred: select T1.first_name,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

extra pred: select name from Dogs order by name asc limit 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

eval_err_num:140
extra pred: select a from b
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

eval_err_num:141
medium pred: select a from b
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'

eval_err_num:142
medium pred: select a from b
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'

medium pred: select date_arrived,date_of_birth from Dogs
medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id

medium pred: select date_arrived,date_of_birth from Dogs
medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id

eval_err_num:143
extra pred: select a from b
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

extra pred: select T2.name,T1.breed_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code order by T2.name desc,T1.breed_name desc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

eval_err_num:144
medium pred: select a from b
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

eval_err_num:145
medium pred: select a from b
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

medium pred: select date_of_birth,date_arrived from Dogs
medium gold: SELECT date_arrived ,  date_departed FROM Dogs

easy pred: select count(name) from Dogs
easy gold: SELECT count(DISTINCT dog_id) FROM Treatments

easy pred: select count(*) from Breeds
easy gold: SELECT count(DISTINCT dog_id) FROM Treatments

eval_err_num:146
easy pred: select a from b
easy gold: SELECT count(DISTINCT professional_id) FROM Treatments

eval_err_num:147
easy pred: select a from b
easy gold: SELECT count(DISTINCT professional_id) FROM Treatments

medium pred: select *,T1.city,T4.city from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where * like 'terminal' or T1.city like 'terminal' or T4.city like 'terminal'
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

medium pred: select T1.state,T4.city,T1.city from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T1.state like 'terminal' or T4.city like 'terminal' or T1.city like 'terminal'
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

medium pred: select T4.first_name,T4.last_name,T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.first_name like 'terminal' or T4.last_name like 'terminal' or T1.last_name like 'terminal'
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

medium pred: select T1.last_name,T1.first_name,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T1.last_name like 'terminal' or T1.first_name like 'terminal' or T4.first_name like 'terminal'
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

eval_err_num:148
hard pred: select a from b
hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )

eval_err_num:149
hard pred: select a from b
hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )

medium pred: select cost_of_treatment from Treatments order by cost_of_treatment desc limit 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

medium pred: select cost_of_treatment from Treatments order by cost_of_treatment asc limit 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

eval_err_num:150
extra pred: select a from b
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

eval_err_num:151
extra pred: select a from b
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

eval_err_num:152
extra pred: select a from b
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

eval_err_num:153
extra pred: select a from b
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

eval_err_num:154
extra pred: select a from b
extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )

eval_err_num:155
extra pred: select a from b
extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )

medium pred: select T4.last_name,T2.name,T1.breed_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.last_name = 'terminal' or T2.name != 'terminal' or T1.breed_name = 'terminal'
medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1

medium pred: select T4.last_name,T2.name,T1.breed_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.last_name not in 'terminal' or T2.name not in 'terminal' or T1.breed_name not in 'terminal'
medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1

easy pred: select age from Dogs order by age asc limit 1
easy gold: SELECT max(age) FROM Dogs

easy pred: select age from Dogs order by age asc limit 1
easy gold: SELECT max(age) FROM Dogs

medium pred: select T2.treatment_type_code,T1.charge_amount from Charges as T1 join Treatments as T2 group by T1.charge_amount,T2.treatment_type_code
medium gold: SELECT charge_type ,  charge_amount FROM Charges

medium pred: select *,charge_type from Charges group by charge_type,*
medium gold: SELECT charge_type ,  charge_amount FROM Charges

easy pred: select zip_code from Professionals order by zip_code desc limit 1
easy gold: SELECT max(charge_amount) FROM Charges

easy pred: select charge_amount from Charges order by charge_amount asc limit 1
easy gold: SELECT max(charge_amount) FROM Charges

medium pred: select T4.cell_number,T4.home_phone,T1.home_phone from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals

medium pred: select T4.email_address,T1.home_phone,T4.home_phone from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals

medium pred: select T2.treatment_type_code,T1.charge_type from Charges as T1 join Treatments as T2 group by T1.charge_type,T2.treatment_type_code
medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs

medium pred: select T2.treatment_type_code,T1.charge_type from Charges as T1 join Treatments as T2 group by T1.charge_type,T2.treatment_type_code
medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs

medium pred: select T1.first_name,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code

medium pred: select T1.first_name,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code

easy pred: select * from singer
easy gold: SELECT count(*) FROM singer

easy pred: select Name from singer order by Name asc
easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC

easy pred: select Name from singer order by Name asc
easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC

easy pred: select Name from singer where Name not in 'terminal'
easy gold: SELECT Name FROM singer WHERE Citizenship != "France"

eval_err_num:156
easy pred: select a from b
easy gold: SELECT Name FROM singer WHERE Citizenship != "France"

medium pred: select Name from singer where Name >= 'terminal' and Name <= 'terminal'
medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949

medium pred: select Name from singer where Name > 'terminal' and Name < 'terminal'
medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949

medium pred: select Name from singer order by Name desc limit 1
medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1

medium pred: select Name from singer order by Name desc limit 1
medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1

medium pred: select Citizenship,count(*) from singer group by *,Citizenship
medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship

medium pred: select Citizenship,count(*) from singer group by *,Citizenship
medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship

hard pred: select Citizenship from singer group by Citizenship order by Citizenship desc limit 1
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

hard pred: select Citizenship from singer group by Citizenship order by Citizenship asc limit 1
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

medium pred: select max(Citizenship),max(*) from singer group by *,Citizenship
medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship

medium pred: select Citizenship,* from singer group by *,Citizenship
medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship

medium pred: select Name from singer where Name > 'terminal'
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000

medium pred: select Name from singer where Name > 'terminal'
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000

eval_err_num:157
medium pred: select a from b
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

eval_err_num:158
medium pred: select a from b
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

medium pred: select sum(Net_Worth_Millions),Name from singer group by Name,Net_Worth_Millions
medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

medium pred: select sum(*),T2.Title,T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T1.Name,T2.Title,*
medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

eval_err_num:159
hard pred: select a from b
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

eval_err_num:160
hard pred: select a from b
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

hard pred: select Citizenship from singer where Citizenship < 'terminal' and Citizenship > 'terminal' intersect select Citizenship from singer where Citizenship < 'terminal' and Citizenship > 'terminal'
hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955

hard pred: select Citizenship from singer where Citizenship < 'terminal' and Citizenship > 'terminal' intersect select Citizenship from singer where Citizenship < 'terminal' and Citizenship > 'terminal'
hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955

easy pred: select sum(*) from Ref_Feature_Types
easy gold: SELECT count(*) FROM Other_Available_Features

medium pred: select feature_type_name from Ref_Feature_Types where feature_type_name = 'terminal'
medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"

medium pred: select property_type_description from Ref_Property_Types
medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code

hard pred: select property_name from Properties where property_name > 'terminal'
hard gold: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1

                     easy                 medium               hard                 extra                all                 
count                252                  469                  153                  160                  1034                
=====================   EXECUTION ACCURACY     =====================
execution            0.163                0.047                0.046                0.013                0.000               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.159                0.034                0.000                0.000                0.054               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.644                0.366                0.596                0.316                0.463               
select(no AGG)       0.742                0.427                0.632                0.316                0.523               
where                0.062                0.057                0.020                0.000                0.047               
where(no OP)         0.082                0.057                0.020                0.000                0.053               
group(no Having)     0.600                0.034                0.595                0.262                0.231               
group                0.000                0.000                0.568                0.246                0.154               
order                0.185                0.014                0.057                0.013                0.043               
and/or               1.000                0.870                0.917                0.897                0.915               
IUEN                 0.000                0.000                0.042                0.000                0.020               
keywords             0.748                0.646                0.481                0.538                0.624               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.595                0.320                0.444                0.231                0.392               
select(no AGG)       0.687                0.373                0.471                0.231                0.442               
where                0.056                0.049                0.013                0.000                0.036               
where(no OP)         0.074                0.049                0.013                0.000                0.040               
group(no Having)     0.600                0.030                0.579                0.208                0.201               
group                0.000                0.000                0.553                0.195                0.134               
order                0.227                0.013                0.053                0.012                0.042               
and/or               0.996                0.858                0.905                0.891                0.906               
IUEN                 0.000                0.000                0.024                0.000                0.013               
keywords             0.713                0.556                0.333                0.394                0.514               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.619                0.341                0.509                0.267                0.425               
select(no AGG)       0.713                0.398                0.539                0.267                0.479               
where                0.059                0.053                0.016                1.000                0.041               
where(no OP)         0.078                0.053                0.016                1.000                0.045               
group(no Having)     0.600                0.032                0.587                0.232                0.215               
group                1.000                1.000                0.560                0.217                0.143               
order                0.204                0.013                0.055                0.013                0.043               
and/or               0.998                0.864                0.911                0.894                0.910               
IUEN                 1.000                1.000                0.030                1.000                0.016               
keywords             0.730                0.597                0.394                0.455                0.564               
